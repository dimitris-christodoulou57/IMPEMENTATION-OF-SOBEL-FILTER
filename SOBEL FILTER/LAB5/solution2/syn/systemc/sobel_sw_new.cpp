// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sobel_sw_new.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sobel_sw_new::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sobel_sw_new::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state1 = "1";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state2 = "10";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state3 = "100";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state4 = "1000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state5 = "10000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state6 = "100000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state7 = "1000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state8 = "10000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_pp0_stage0 = "100000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state12 = "1000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state13 = "10000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_pp1_stage0 = "100000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state16 = "1000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state17 = "10000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state18 = "100000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state19 = "1000000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state20 = "10000000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state21 = "100000000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state22 = "1000000000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state23 = "10000000000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_pp2_stage0 = "100000000000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state27 = "1000000000000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_pp3_stage0 = "10000000000000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_pp3_stage1 = "100000000000000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_pp3_stage2 = "1000000000000000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_pp3_stage3 = "10000000000000000000000000";
const sc_lv<27> sobel_sw_new::ap_ST_fsm_state42 = "100000000000000000000000000";
const sc_lv<32> sobel_sw_new::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool sobel_sw_new::ap_const_boolean_1 = true;
const sc_lv<32> sobel_sw_new::ap_const_lv32_1 = "1";
const sc_lv<32> sobel_sw_new::ap_const_lv32_8 = "1000";
const bool sobel_sw_new::ap_const_boolean_0 = false;
const sc_lv<1> sobel_sw_new::ap_const_lv1_0 = "0";
const sc_lv<32> sobel_sw_new::ap_const_lv32_D = "1101";
const sc_lv<32> sobel_sw_new::ap_const_lv32_14 = "10100";
const sc_lv<32> sobel_sw_new::ap_const_lv32_19 = "11001";
const sc_lv<32> sobel_sw_new::ap_const_lv32_16 = "10110";
const sc_lv<32> sobel_sw_new::ap_const_lv32_17 = "10111";
const sc_lv<1> sobel_sw_new::ap_const_lv1_1 = "1";
const int sobel_sw_new::C_S_AXI_DATA_WIDTH = "100000";
const int sobel_sw_new::C_M_AXI_INPUT_R_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int sobel_sw_new::C_M_AXI_INPUT_R_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int sobel_sw_new::C_M_AXI_INPUT_R_CACHE_VALUE = "11";
const int sobel_sw_new::C_M_AXI_DATA_WIDTH = "100000";
const int sobel_sw_new::C_M_AXI_OUTPUT_R_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int sobel_sw_new::C_M_AXI_OUTPUT_R_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int sobel_sw_new::C_M_AXI_OUTPUT_R_CACHE_VALUE = "11";
const sc_lv<32> sobel_sw_new::ap_const_lv32_7 = "111";
const sc_lv<32> sobel_sw_new::ap_const_lv32_A = "1010";
const sc_lv<32> sobel_sw_new::ap_const_lv32_B = "1011";
const sc_lv<32> sobel_sw_new::ap_const_lv32_C = "1100";
const sc_lv<32> sobel_sw_new::ap_const_lv32_18 = "11000";
const sc_lv<32> sobel_sw_new::ap_const_lv32_1A = "11010";
const sc_lv<32> sobel_sw_new::ap_const_lv32_13 = "10011";
const sc_lv<32> sobel_sw_new::ap_const_lv32_15 = "10101";
const sc_lv<12> sobel_sw_new::ap_const_lv12_0 = "000000000000";
const sc_lv<9> sobel_sw_new::ap_const_lv9_1 = "1";
const sc_lv<32> sobel_sw_new::ap_const_lv32_9 = "1001";
const sc_lv<11> sobel_sw_new::ap_const_lv11_0 = "00000000000";
const sc_lv<10> sobel_sw_new::ap_const_lv10_1 = "1";
const sc_lv<32> sobel_sw_new::ap_const_lv32_C00 = "110000000000";
const sc_lv<3> sobel_sw_new::ap_const_lv3_0 = "000";
const sc_lv<2> sobel_sw_new::ap_const_lv2_0 = "00";
const sc_lv<4> sobel_sw_new::ap_const_lv4_0 = "0000";
const sc_lv<32> sobel_sw_new::ap_const_lv32_400 = "10000000000";
const sc_lv<8> sobel_sw_new::ap_const_lv8_FF = "11111111";
const sc_lv<32> sobel_sw_new::ap_const_lv32_3 = "11";
const sc_lv<12> sobel_sw_new::ap_const_lv12_C00 = "110000000000";
const sc_lv<12> sobel_sw_new::ap_const_lv12_1 = "1";
const sc_lv<9> sobel_sw_new::ap_const_lv9_101 = "100000001";
const sc_lv<12> sobel_sw_new::ap_const_lv12_800 = "100000000000";
const sc_lv<12> sobel_sw_new::ap_const_lv12_400 = "10000000000";
const sc_lv<11> sobel_sw_new::ap_const_lv11_400 = "10000000000";
const sc_lv<11> sobel_sw_new::ap_const_lv11_1 = "1";
const sc_lv<10> sobel_sw_new::ap_const_lv10_3FF = "1111111111";
const sc_lv<12> sobel_sw_new::ap_const_lv12_801 = "100000000001";
const sc_lv<11> sobel_sw_new::ap_const_lv11_401 = "10000000001";
const sc_lv<11> sobel_sw_new::ap_const_lv11_3FF = "1111111111";
const sc_lv<12> sobel_sw_new::ap_const_lv12_7FF = "11111111111";
const sc_lv<2> sobel_sw_new::ap_const_lv2_2 = "10";
const sc_lv<8> sobel_sw_new::ap_const_lv8_0 = "00000000";

sobel_sw_new::sobel_sw_new(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sobel_sw_new_CTRL_BUS_s_axi_U = new sobel_sw_new_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>("sobel_sw_new_CTRL_BUS_s_axi_U");
    sobel_sw_new_CTRL_BUS_s_axi_U->AWVALID(s_axi_CTRL_BUS_AWVALID);
    sobel_sw_new_CTRL_BUS_s_axi_U->AWREADY(s_axi_CTRL_BUS_AWREADY);
    sobel_sw_new_CTRL_BUS_s_axi_U->AWADDR(s_axi_CTRL_BUS_AWADDR);
    sobel_sw_new_CTRL_BUS_s_axi_U->WVALID(s_axi_CTRL_BUS_WVALID);
    sobel_sw_new_CTRL_BUS_s_axi_U->WREADY(s_axi_CTRL_BUS_WREADY);
    sobel_sw_new_CTRL_BUS_s_axi_U->WDATA(s_axi_CTRL_BUS_WDATA);
    sobel_sw_new_CTRL_BUS_s_axi_U->WSTRB(s_axi_CTRL_BUS_WSTRB);
    sobel_sw_new_CTRL_BUS_s_axi_U->ARVALID(s_axi_CTRL_BUS_ARVALID);
    sobel_sw_new_CTRL_BUS_s_axi_U->ARREADY(s_axi_CTRL_BUS_ARREADY);
    sobel_sw_new_CTRL_BUS_s_axi_U->ARADDR(s_axi_CTRL_BUS_ARADDR);
    sobel_sw_new_CTRL_BUS_s_axi_U->RVALID(s_axi_CTRL_BUS_RVALID);
    sobel_sw_new_CTRL_BUS_s_axi_U->RREADY(s_axi_CTRL_BUS_RREADY);
    sobel_sw_new_CTRL_BUS_s_axi_U->RDATA(s_axi_CTRL_BUS_RDATA);
    sobel_sw_new_CTRL_BUS_s_axi_U->RRESP(s_axi_CTRL_BUS_RRESP);
    sobel_sw_new_CTRL_BUS_s_axi_U->BVALID(s_axi_CTRL_BUS_BVALID);
    sobel_sw_new_CTRL_BUS_s_axi_U->BREADY(s_axi_CTRL_BUS_BREADY);
    sobel_sw_new_CTRL_BUS_s_axi_U->BRESP(s_axi_CTRL_BUS_BRESP);
    sobel_sw_new_CTRL_BUS_s_axi_U->ACLK(ap_clk);
    sobel_sw_new_CTRL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    sobel_sw_new_CTRL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    sobel_sw_new_CTRL_BUS_s_axi_U->ap_start(ap_start);
    sobel_sw_new_CTRL_BUS_s_axi_U->interrupt(interrupt);
    sobel_sw_new_CTRL_BUS_s_axi_U->ap_ready(ap_ready);
    sobel_sw_new_CTRL_BUS_s_axi_U->ap_done(ap_done);
    sobel_sw_new_CTRL_BUS_s_axi_U->ap_idle(ap_idle);
    sobel_sw_new_CTRL_BUS_s_axi_U->input_r_r(input_r_r);
    sobel_sw_new_CTRL_BUS_s_axi_U->output_r_r(output_r_r);
    sobel_sw_new_INPUT_r_m_axi_U = new sobel_sw_new_INPUT_r_m_axi<8,32,5,16,16,16,16,C_M_AXI_INPUT_R_ID_WIDTH,C_M_AXI_INPUT_R_ADDR_WIDTH,C_M_AXI_INPUT_R_DATA_WIDTH,C_M_AXI_INPUT_R_AWUSER_WIDTH,C_M_AXI_INPUT_R_ARUSER_WIDTH,C_M_AXI_INPUT_R_WUSER_WIDTH,C_M_AXI_INPUT_R_RUSER_WIDTH,C_M_AXI_INPUT_R_BUSER_WIDTH,C_M_AXI_INPUT_R_USER_VALUE,C_M_AXI_INPUT_R_PROT_VALUE,C_M_AXI_INPUT_R_CACHE_VALUE>("sobel_sw_new_INPUT_r_m_axi_U");
    sobel_sw_new_INPUT_r_m_axi_U->AWVALID(m_axi_INPUT_r_AWVALID);
    sobel_sw_new_INPUT_r_m_axi_U->AWREADY(m_axi_INPUT_r_AWREADY);
    sobel_sw_new_INPUT_r_m_axi_U->AWADDR(m_axi_INPUT_r_AWADDR);
    sobel_sw_new_INPUT_r_m_axi_U->AWID(m_axi_INPUT_r_AWID);
    sobel_sw_new_INPUT_r_m_axi_U->AWLEN(m_axi_INPUT_r_AWLEN);
    sobel_sw_new_INPUT_r_m_axi_U->AWSIZE(m_axi_INPUT_r_AWSIZE);
    sobel_sw_new_INPUT_r_m_axi_U->AWBURST(m_axi_INPUT_r_AWBURST);
    sobel_sw_new_INPUT_r_m_axi_U->AWLOCK(m_axi_INPUT_r_AWLOCK);
    sobel_sw_new_INPUT_r_m_axi_U->AWCACHE(m_axi_INPUT_r_AWCACHE);
    sobel_sw_new_INPUT_r_m_axi_U->AWPROT(m_axi_INPUT_r_AWPROT);
    sobel_sw_new_INPUT_r_m_axi_U->AWQOS(m_axi_INPUT_r_AWQOS);
    sobel_sw_new_INPUT_r_m_axi_U->AWREGION(m_axi_INPUT_r_AWREGION);
    sobel_sw_new_INPUT_r_m_axi_U->AWUSER(m_axi_INPUT_r_AWUSER);
    sobel_sw_new_INPUT_r_m_axi_U->WVALID(m_axi_INPUT_r_WVALID);
    sobel_sw_new_INPUT_r_m_axi_U->WREADY(m_axi_INPUT_r_WREADY);
    sobel_sw_new_INPUT_r_m_axi_U->WDATA(m_axi_INPUT_r_WDATA);
    sobel_sw_new_INPUT_r_m_axi_U->WSTRB(m_axi_INPUT_r_WSTRB);
    sobel_sw_new_INPUT_r_m_axi_U->WLAST(m_axi_INPUT_r_WLAST);
    sobel_sw_new_INPUT_r_m_axi_U->WID(m_axi_INPUT_r_WID);
    sobel_sw_new_INPUT_r_m_axi_U->WUSER(m_axi_INPUT_r_WUSER);
    sobel_sw_new_INPUT_r_m_axi_U->ARVALID(m_axi_INPUT_r_ARVALID);
    sobel_sw_new_INPUT_r_m_axi_U->ARREADY(m_axi_INPUT_r_ARREADY);
    sobel_sw_new_INPUT_r_m_axi_U->ARADDR(m_axi_INPUT_r_ARADDR);
    sobel_sw_new_INPUT_r_m_axi_U->ARID(m_axi_INPUT_r_ARID);
    sobel_sw_new_INPUT_r_m_axi_U->ARLEN(m_axi_INPUT_r_ARLEN);
    sobel_sw_new_INPUT_r_m_axi_U->ARSIZE(m_axi_INPUT_r_ARSIZE);
    sobel_sw_new_INPUT_r_m_axi_U->ARBURST(m_axi_INPUT_r_ARBURST);
    sobel_sw_new_INPUT_r_m_axi_U->ARLOCK(m_axi_INPUT_r_ARLOCK);
    sobel_sw_new_INPUT_r_m_axi_U->ARCACHE(m_axi_INPUT_r_ARCACHE);
    sobel_sw_new_INPUT_r_m_axi_U->ARPROT(m_axi_INPUT_r_ARPROT);
    sobel_sw_new_INPUT_r_m_axi_U->ARQOS(m_axi_INPUT_r_ARQOS);
    sobel_sw_new_INPUT_r_m_axi_U->ARREGION(m_axi_INPUT_r_ARREGION);
    sobel_sw_new_INPUT_r_m_axi_U->ARUSER(m_axi_INPUT_r_ARUSER);
    sobel_sw_new_INPUT_r_m_axi_U->RVALID(m_axi_INPUT_r_RVALID);
    sobel_sw_new_INPUT_r_m_axi_U->RREADY(m_axi_INPUT_r_RREADY);
    sobel_sw_new_INPUT_r_m_axi_U->RDATA(m_axi_INPUT_r_RDATA);
    sobel_sw_new_INPUT_r_m_axi_U->RLAST(m_axi_INPUT_r_RLAST);
    sobel_sw_new_INPUT_r_m_axi_U->RID(m_axi_INPUT_r_RID);
    sobel_sw_new_INPUT_r_m_axi_U->RUSER(m_axi_INPUT_r_RUSER);
    sobel_sw_new_INPUT_r_m_axi_U->RRESP(m_axi_INPUT_r_RRESP);
    sobel_sw_new_INPUT_r_m_axi_U->BVALID(m_axi_INPUT_r_BVALID);
    sobel_sw_new_INPUT_r_m_axi_U->BREADY(m_axi_INPUT_r_BREADY);
    sobel_sw_new_INPUT_r_m_axi_U->BRESP(m_axi_INPUT_r_BRESP);
    sobel_sw_new_INPUT_r_m_axi_U->BID(m_axi_INPUT_r_BID);
    sobel_sw_new_INPUT_r_m_axi_U->BUSER(m_axi_INPUT_r_BUSER);
    sobel_sw_new_INPUT_r_m_axi_U->ACLK(ap_clk);
    sobel_sw_new_INPUT_r_m_axi_U->ARESET(ap_rst_n_inv);
    sobel_sw_new_INPUT_r_m_axi_U->ACLK_EN(ap_var_for_const0);
    sobel_sw_new_INPUT_r_m_axi_U->I_ARVALID(INPUT_r_ARVALID);
    sobel_sw_new_INPUT_r_m_axi_U->I_ARREADY(INPUT_r_ARREADY);
    sobel_sw_new_INPUT_r_m_axi_U->I_ARADDR(INPUT_r_ARADDR);
    sobel_sw_new_INPUT_r_m_axi_U->I_ARID(ap_var_for_const1);
    sobel_sw_new_INPUT_r_m_axi_U->I_ARLEN(INPUT_r_ARLEN);
    sobel_sw_new_INPUT_r_m_axi_U->I_ARSIZE(ap_var_for_const2);
    sobel_sw_new_INPUT_r_m_axi_U->I_ARLOCK(ap_var_for_const3);
    sobel_sw_new_INPUT_r_m_axi_U->I_ARCACHE(ap_var_for_const4);
    sobel_sw_new_INPUT_r_m_axi_U->I_ARQOS(ap_var_for_const4);
    sobel_sw_new_INPUT_r_m_axi_U->I_ARPROT(ap_var_for_const2);
    sobel_sw_new_INPUT_r_m_axi_U->I_ARUSER(ap_var_for_const1);
    sobel_sw_new_INPUT_r_m_axi_U->I_ARBURST(ap_var_for_const3);
    sobel_sw_new_INPUT_r_m_axi_U->I_ARREGION(ap_var_for_const4);
    sobel_sw_new_INPUT_r_m_axi_U->I_RVALID(INPUT_r_RVALID);
    sobel_sw_new_INPUT_r_m_axi_U->I_RREADY(INPUT_r_RREADY);
    sobel_sw_new_INPUT_r_m_axi_U->I_RDATA(INPUT_r_RDATA);
    sobel_sw_new_INPUT_r_m_axi_U->I_RID(INPUT_r_RID);
    sobel_sw_new_INPUT_r_m_axi_U->I_RUSER(INPUT_r_RUSER);
    sobel_sw_new_INPUT_r_m_axi_U->I_RRESP(INPUT_r_RRESP);
    sobel_sw_new_INPUT_r_m_axi_U->I_RLAST(INPUT_r_RLAST);
    sobel_sw_new_INPUT_r_m_axi_U->I_AWVALID(ap_var_for_const5);
    sobel_sw_new_INPUT_r_m_axi_U->I_AWREADY(INPUT_r_AWREADY);
    sobel_sw_new_INPUT_r_m_axi_U->I_AWADDR(ap_var_for_const6);
    sobel_sw_new_INPUT_r_m_axi_U->I_AWID(ap_var_for_const1);
    sobel_sw_new_INPUT_r_m_axi_U->I_AWLEN(ap_var_for_const6);
    sobel_sw_new_INPUT_r_m_axi_U->I_AWSIZE(ap_var_for_const2);
    sobel_sw_new_INPUT_r_m_axi_U->I_AWLOCK(ap_var_for_const3);
    sobel_sw_new_INPUT_r_m_axi_U->I_AWCACHE(ap_var_for_const4);
    sobel_sw_new_INPUT_r_m_axi_U->I_AWQOS(ap_var_for_const4);
    sobel_sw_new_INPUT_r_m_axi_U->I_AWPROT(ap_var_for_const2);
    sobel_sw_new_INPUT_r_m_axi_U->I_AWUSER(ap_var_for_const1);
    sobel_sw_new_INPUT_r_m_axi_U->I_AWBURST(ap_var_for_const3);
    sobel_sw_new_INPUT_r_m_axi_U->I_AWREGION(ap_var_for_const4);
    sobel_sw_new_INPUT_r_m_axi_U->I_WVALID(ap_var_for_const5);
    sobel_sw_new_INPUT_r_m_axi_U->I_WREADY(INPUT_r_WREADY);
    sobel_sw_new_INPUT_r_m_axi_U->I_WDATA(ap_var_for_const7);
    sobel_sw_new_INPUT_r_m_axi_U->I_WID(ap_var_for_const1);
    sobel_sw_new_INPUT_r_m_axi_U->I_WUSER(ap_var_for_const1);
    sobel_sw_new_INPUT_r_m_axi_U->I_WLAST(ap_var_for_const5);
    sobel_sw_new_INPUT_r_m_axi_U->I_WSTRB(ap_var_for_const1);
    sobel_sw_new_INPUT_r_m_axi_U->I_BVALID(INPUT_r_BVALID);
    sobel_sw_new_INPUT_r_m_axi_U->I_BREADY(ap_var_for_const5);
    sobel_sw_new_INPUT_r_m_axi_U->I_BRESP(INPUT_r_BRESP);
    sobel_sw_new_INPUT_r_m_axi_U->I_BID(INPUT_r_BID);
    sobel_sw_new_INPUT_r_m_axi_U->I_BUSER(INPUT_r_BUSER);
    sobel_sw_new_OUTPUT_r_m_axi_U = new sobel_sw_new_OUTPUT_r_m_axi<8,32,5,16,16,16,16,C_M_AXI_OUTPUT_R_ID_WIDTH,C_M_AXI_OUTPUT_R_ADDR_WIDTH,C_M_AXI_OUTPUT_R_DATA_WIDTH,C_M_AXI_OUTPUT_R_AWUSER_WIDTH,C_M_AXI_OUTPUT_R_ARUSER_WIDTH,C_M_AXI_OUTPUT_R_WUSER_WIDTH,C_M_AXI_OUTPUT_R_RUSER_WIDTH,C_M_AXI_OUTPUT_R_BUSER_WIDTH,C_M_AXI_OUTPUT_R_USER_VALUE,C_M_AXI_OUTPUT_R_PROT_VALUE,C_M_AXI_OUTPUT_R_CACHE_VALUE>("sobel_sw_new_OUTPUT_r_m_axi_U");
    sobel_sw_new_OUTPUT_r_m_axi_U->AWVALID(m_axi_OUTPUT_r_AWVALID);
    sobel_sw_new_OUTPUT_r_m_axi_U->AWREADY(m_axi_OUTPUT_r_AWREADY);
    sobel_sw_new_OUTPUT_r_m_axi_U->AWADDR(m_axi_OUTPUT_r_AWADDR);
    sobel_sw_new_OUTPUT_r_m_axi_U->AWID(m_axi_OUTPUT_r_AWID);
    sobel_sw_new_OUTPUT_r_m_axi_U->AWLEN(m_axi_OUTPUT_r_AWLEN);
    sobel_sw_new_OUTPUT_r_m_axi_U->AWSIZE(m_axi_OUTPUT_r_AWSIZE);
    sobel_sw_new_OUTPUT_r_m_axi_U->AWBURST(m_axi_OUTPUT_r_AWBURST);
    sobel_sw_new_OUTPUT_r_m_axi_U->AWLOCK(m_axi_OUTPUT_r_AWLOCK);
    sobel_sw_new_OUTPUT_r_m_axi_U->AWCACHE(m_axi_OUTPUT_r_AWCACHE);
    sobel_sw_new_OUTPUT_r_m_axi_U->AWPROT(m_axi_OUTPUT_r_AWPROT);
    sobel_sw_new_OUTPUT_r_m_axi_U->AWQOS(m_axi_OUTPUT_r_AWQOS);
    sobel_sw_new_OUTPUT_r_m_axi_U->AWREGION(m_axi_OUTPUT_r_AWREGION);
    sobel_sw_new_OUTPUT_r_m_axi_U->AWUSER(m_axi_OUTPUT_r_AWUSER);
    sobel_sw_new_OUTPUT_r_m_axi_U->WVALID(m_axi_OUTPUT_r_WVALID);
    sobel_sw_new_OUTPUT_r_m_axi_U->WREADY(m_axi_OUTPUT_r_WREADY);
    sobel_sw_new_OUTPUT_r_m_axi_U->WDATA(m_axi_OUTPUT_r_WDATA);
    sobel_sw_new_OUTPUT_r_m_axi_U->WSTRB(m_axi_OUTPUT_r_WSTRB);
    sobel_sw_new_OUTPUT_r_m_axi_U->WLAST(m_axi_OUTPUT_r_WLAST);
    sobel_sw_new_OUTPUT_r_m_axi_U->WID(m_axi_OUTPUT_r_WID);
    sobel_sw_new_OUTPUT_r_m_axi_U->WUSER(m_axi_OUTPUT_r_WUSER);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARVALID(m_axi_OUTPUT_r_ARVALID);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARREADY(m_axi_OUTPUT_r_ARREADY);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARADDR(m_axi_OUTPUT_r_ARADDR);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARID(m_axi_OUTPUT_r_ARID);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARLEN(m_axi_OUTPUT_r_ARLEN);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARSIZE(m_axi_OUTPUT_r_ARSIZE);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARBURST(m_axi_OUTPUT_r_ARBURST);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARLOCK(m_axi_OUTPUT_r_ARLOCK);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARCACHE(m_axi_OUTPUT_r_ARCACHE);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARPROT(m_axi_OUTPUT_r_ARPROT);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARQOS(m_axi_OUTPUT_r_ARQOS);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARREGION(m_axi_OUTPUT_r_ARREGION);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARUSER(m_axi_OUTPUT_r_ARUSER);
    sobel_sw_new_OUTPUT_r_m_axi_U->RVALID(m_axi_OUTPUT_r_RVALID);
    sobel_sw_new_OUTPUT_r_m_axi_U->RREADY(m_axi_OUTPUT_r_RREADY);
    sobel_sw_new_OUTPUT_r_m_axi_U->RDATA(m_axi_OUTPUT_r_RDATA);
    sobel_sw_new_OUTPUT_r_m_axi_U->RLAST(m_axi_OUTPUT_r_RLAST);
    sobel_sw_new_OUTPUT_r_m_axi_U->RID(m_axi_OUTPUT_r_RID);
    sobel_sw_new_OUTPUT_r_m_axi_U->RUSER(m_axi_OUTPUT_r_RUSER);
    sobel_sw_new_OUTPUT_r_m_axi_U->RRESP(m_axi_OUTPUT_r_RRESP);
    sobel_sw_new_OUTPUT_r_m_axi_U->BVALID(m_axi_OUTPUT_r_BVALID);
    sobel_sw_new_OUTPUT_r_m_axi_U->BREADY(m_axi_OUTPUT_r_BREADY);
    sobel_sw_new_OUTPUT_r_m_axi_U->BRESP(m_axi_OUTPUT_r_BRESP);
    sobel_sw_new_OUTPUT_r_m_axi_U->BID(m_axi_OUTPUT_r_BID);
    sobel_sw_new_OUTPUT_r_m_axi_U->BUSER(m_axi_OUTPUT_r_BUSER);
    sobel_sw_new_OUTPUT_r_m_axi_U->ACLK(ap_clk);
    sobel_sw_new_OUTPUT_r_m_axi_U->ARESET(ap_rst_n_inv);
    sobel_sw_new_OUTPUT_r_m_axi_U->ACLK_EN(ap_var_for_const0);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_ARVALID(ap_var_for_const5);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_ARREADY(OUTPUT_r_ARREADY);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_ARADDR(ap_var_for_const6);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_ARID(ap_var_for_const1);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_ARLEN(ap_var_for_const6);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_ARSIZE(ap_var_for_const2);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_ARLOCK(ap_var_for_const3);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_ARCACHE(ap_var_for_const4);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_ARQOS(ap_var_for_const4);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_ARPROT(ap_var_for_const2);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_ARUSER(ap_var_for_const1);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_ARBURST(ap_var_for_const3);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_ARREGION(ap_var_for_const4);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_RVALID(OUTPUT_r_RVALID);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_RREADY(ap_var_for_const5);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_RDATA(OUTPUT_r_RDATA);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_RID(OUTPUT_r_RID);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_RUSER(OUTPUT_r_RUSER);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_RRESP(OUTPUT_r_RRESP);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_RLAST(OUTPUT_r_RLAST);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_AWVALID(OUTPUT_r_AWVALID);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_AWREADY(OUTPUT_r_AWREADY);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_AWADDR(OUTPUT_r_AWADDR);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_AWID(ap_var_for_const1);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_AWLEN(ap_var_for_const8);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_AWSIZE(ap_var_for_const2);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_AWLOCK(ap_var_for_const3);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_AWCACHE(ap_var_for_const4);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_AWQOS(ap_var_for_const4);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_AWPROT(ap_var_for_const2);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_AWUSER(ap_var_for_const1);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_AWBURST(ap_var_for_const3);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_AWREGION(ap_var_for_const4);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_WVALID(OUTPUT_r_WVALID);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_WREADY(OUTPUT_r_WREADY);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_WDATA(OUTPUT_r_WDATA);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_WID(ap_var_for_const1);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_WUSER(ap_var_for_const1);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_WLAST(ap_var_for_const5);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_WSTRB(ap_var_for_const9);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_BVALID(OUTPUT_r_BVALID);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_BREADY(OUTPUT_r_BREADY);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_BRESP(OUTPUT_r_BRESP);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_BID(OUTPUT_r_BID);
    sobel_sw_new_OUTPUT_r_m_axi_U->I_BUSER(OUTPUT_r_BUSER);
    small_input_U = new sobel_sw_new_smalbkb("small_input_U");
    small_input_U->clk(ap_clk);
    small_input_U->reset(ap_rst_n_inv);
    small_input_U->address0(small_input_address0);
    small_input_U->ce0(small_input_ce0);
    small_input_U->we0(small_input_we0);
    small_input_U->d0(reg_361);
    small_input_U->q0(small_input_q0);
    small_input_U->address1(small_input_address1);
    small_input_U->ce1(small_input_ce1);
    small_input_U->we1(small_input_we1);
    small_input_U->d1(small_input_d1);
    small_input_U->q1(small_input_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_INPUT_r_ARADDR);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( INPUT_addr_1_reg_950 );
    sensitive << ( tmp_2_fu_372_p1 );
    sensitive << ( ap_reg_ioackin_INPUT_r_ARREADY );

    SC_METHOD(thread_INPUT_r_ARLEN);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_reg_ioackin_INPUT_r_ARREADY );

    SC_METHOD(thread_INPUT_r_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_reg_ioackin_INPUT_r_ARREADY );

    SC_METHOD(thread_INPUT_r_RREADY);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond6_reg_912 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond3_reg_956 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_block_pp2_stage0_flag00011001 );

    SC_METHOD(thread_INPUT_r_blk_n_AR);
    sensitive << ( m_axi_INPUT_r_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_INPUT_r_blk_n_R);
    sensitive << ( m_axi_INPUT_r_RVALID );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond6_reg_912 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0_flag00000000 );
    sensitive << ( exitcond3_reg_956 );

    SC_METHOD(thread_OUTPUT_r_AWADDR);
    sensitive << ( icmp_reg_1087 );
    sensitive << ( OUTPUT_addr_reg_1091 );
    sensitive << ( OUTPUT_addr_1_reg_1101 );
    sensitive << ( ap_condition_1437 );

    SC_METHOD(thread_OUTPUT_r_AWVALID);
    sensitive << ( ap_CS_fsm_pp3_stage3 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( icmp_reg_1087 );
    sensitive << ( ap_reg_ioackin_OUTPUT_r_AWREADY );
    sensitive << ( ap_block_pp3_stage3_flag00001001 );

    SC_METHOD(thread_OUTPUT_r_BREADY);
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( ap_reg_pp3_iter2_icmp_reg_1087 );
    sensitive << ( ap_block_pp3_stage1_flag00011001 );

    SC_METHOD(thread_OUTPUT_r_WDATA);
    sensitive << ( icmp_reg_1087 );
    sensitive << ( tmp_15_reg_1096 );
    sensitive << ( ap_condition_1440 );

    SC_METHOD(thread_OUTPUT_r_WVALID);
    sensitive << ( icmp_reg_1087 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_reg_ioackin_OUTPUT_r_WREADY );
    sensitive << ( ap_block_pp3_stage0_flag00001001 );

    SC_METHOD(thread_OUTPUT_r_blk_n_AW);
    sensitive << ( m_axi_OUTPUT_r_AWREADY );
    sensitive << ( ap_CS_fsm_pp3_stage3 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_pp3_stage3_flag00000000 );
    sensitive << ( icmp_reg_1087 );

    SC_METHOD(thread_OUTPUT_r_blk_n_B);
    sensitive << ( m_axi_OUTPUT_r_BVALID );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( ap_block_pp3_stage1_flag00000000 );
    sensitive << ( ap_reg_pp3_iter2_icmp_reg_1087 );

    SC_METHOD(thread_OUTPUT_r_blk_n_W);
    sensitive << ( m_axi_OUTPUT_r_WREADY );
    sensitive << ( icmp_reg_1087 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_block_pp3_stage0_flag00000000 );

    SC_METHOD(thread_abs5_cast3_fu_789_p1);
    sensitive << ( abs5_fu_784_p3 );

    SC_METHOD(thread_abs5_fu_784_p3);
    sensitive << ( res_1_reg_1067 );
    sensitive << ( neg3_reg_1072 );
    sensitive << ( abscond4_reg_1077 );

    SC_METHOD(thread_abs_cast4_fu_781_p1);
    sensitive << ( abs_reg_1062 );

    SC_METHOD(thread_abs_fu_735_p3);
    sensitive << ( res_reg_1040 );
    sensitive << ( abscond_fu_730_p2 );
    sensitive << ( neg_fu_725_p2 );

    SC_METHOD(thread_abscond4_fu_771_p2);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_flag00011001 );
    sensitive << ( ap_reg_pp3_iter1_exitcond_reg_970 );
    sensitive << ( res_1_fu_759_p2 );

    SC_METHOD(thread_abscond_fu_730_p2);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_flag00011001 );
    sensitive << ( ap_reg_pp3_iter1_exitcond_reg_970 );
    sensitive << ( res_reg_1040 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond6_reg_912 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond6_reg_912 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_pp1_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp1_stage0_flag00011001);

    SC_METHOD(thread_ap_block_pp1_stage0_flag00011011);

    SC_METHOD(thread_ap_block_pp2_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp2_stage0_flag00011001);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond3_reg_956 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_pp2_stage0_flag00011011);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond3_reg_956 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_pp3_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp3_stage0_flag00001001);

    SC_METHOD(thread_ap_block_pp3_stage0_flag00011001);
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_block_state36_io );

    SC_METHOD(thread_ap_block_pp3_stage0_flag00011011);
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_block_state36_io );

    SC_METHOD(thread_ap_block_pp3_stage1_flag00000000);

    SC_METHOD(thread_ap_block_pp3_stage1_flag00011001);
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( ap_reg_pp3_iter2_icmp_reg_1087 );
    sensitive << ( OUTPUT_r_BVALID );

    SC_METHOD(thread_ap_block_pp3_stage1_flag00011011);
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( ap_reg_pp3_iter2_icmp_reg_1087 );
    sensitive << ( OUTPUT_r_BVALID );

    SC_METHOD(thread_ap_block_pp3_stage2_flag00000000);

    SC_METHOD(thread_ap_block_pp3_stage2_flag00011001);

    SC_METHOD(thread_ap_block_pp3_stage2_flag00011011);

    SC_METHOD(thread_ap_block_pp3_stage3_flag00000000);

    SC_METHOD(thread_ap_block_pp3_stage3_flag00001001);

    SC_METHOD(thread_ap_block_pp3_stage3_flag00011001);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_state35_io );

    SC_METHOD(thread_ap_block_pp3_stage3_flag00011011);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_state35_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);
    sensitive << ( exitcond6_reg_912 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state14_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state15_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state24_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state25_pp2_stage0_iter1);
    sensitive << ( exitcond3_reg_956 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_state26_pp2_stage0_iter2);

    SC_METHOD(thread_ap_block_state28_pp3_stage0_iter0);

    SC_METHOD(thread_ap_block_state29_pp3_stage1_iter0);

    SC_METHOD(thread_ap_block_state30_pp3_stage2_iter0);

    SC_METHOD(thread_ap_block_state31_pp3_stage3_iter0);

    SC_METHOD(thread_ap_block_state32_pp3_stage0_iter1);

    SC_METHOD(thread_ap_block_state33_pp3_stage1_iter1);

    SC_METHOD(thread_ap_block_state34_pp3_stage2_iter1);

    SC_METHOD(thread_ap_block_state35_io);
    sensitive << ( icmp_reg_1087 );
    sensitive << ( ap_sig_ioackin_OUTPUT_r_AWREADY );

    SC_METHOD(thread_ap_block_state35_pp3_stage3_iter1);

    SC_METHOD(thread_ap_block_state36_io);
    sensitive << ( icmp_reg_1087 );
    sensitive << ( ap_sig_ioackin_OUTPUT_r_WREADY );

    SC_METHOD(thread_ap_block_state36_pp3_stage0_iter2);

    SC_METHOD(thread_ap_block_state37_pp3_stage1_iter2);

    SC_METHOD(thread_ap_block_state38_pp3_stage2_iter2);

    SC_METHOD(thread_ap_block_state39_pp3_stage3_iter2);

    SC_METHOD(thread_ap_block_state40_pp3_stage0_iter3);

    SC_METHOD(thread_ap_block_state41_pp3_stage1_iter3);
    sensitive << ( ap_reg_pp3_iter2_icmp_reg_1087 );
    sensitive << ( OUTPUT_r_BVALID );

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter0);

    SC_METHOD(thread_ap_condition_1437);
    sensitive << ( ap_CS_fsm_pp3_stage3 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_reg_ioackin_OUTPUT_r_AWREADY );
    sensitive << ( ap_block_pp3_stage3_flag00001001 );

    SC_METHOD(thread_ap_condition_1440);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_reg_ioackin_OUTPUT_r_WREADY );
    sensitive << ( ap_block_pp3_stage0_flag00001001 );

    SC_METHOD(thread_ap_condition_502);
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_block_pp3_stage1_flag00011001 );

    SC_METHOD(thread_ap_condition_508);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_flag00011001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state9);
    sensitive << ( exitcond6_fu_388_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state14);
    sensitive << ( exitcond1_fu_422_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state24);
    sensitive << ( exitcond3_fu_475_p2 );

    SC_METHOD(thread_ap_condition_pp3_exit_iter0_state28);
    sensitive << ( exitcond_fu_510_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( exitcond2_fu_410_p2 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_enable_pp3);
    sensitive << ( ap_idle_pp3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp2_iter2 );

    SC_METHOD(thread_ap_idle_pp3);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( exitcond2_fu_410_p2 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_INPUT_r_ARREADY);
    sensitive << ( INPUT_r_ARREADY );
    sensitive << ( ap_reg_ioackin_INPUT_r_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_OUTPUT_r_AWREADY);
    sensitive << ( OUTPUT_r_AWREADY );
    sensitive << ( ap_reg_ioackin_OUTPUT_r_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_OUTPUT_r_WREADY);
    sensitive << ( OUTPUT_r_WREADY );
    sensitive << ( ap_reg_ioackin_OUTPUT_r_WREADY );

    SC_METHOD(thread_exitcond1_fu_422_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( k_phi_fu_327_p4 );

    SC_METHOD(thread_exitcond2_fu_410_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( i_reg_311 );

    SC_METHOD(thread_exitcond3_fu_475_p2);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( indvar1_reg_335 );
    sensitive << ( ap_block_pp2_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_exitcond6_fu_388_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( indvar_phi_fu_303_p4 );

    SC_METHOD(thread_exitcond_fu_510_p2);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( posx_assign_phi_fu_350_p4 );

    SC_METHOD(thread_i_1_fu_878_p2);
    sensitive << ( i_reg_311 );

    SC_METHOD(thread_icmp_fu_813_p2);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_reg_pp3_iter1_exitcond_reg_970 );
    sensitive << ( ap_CS_fsm_pp3_stage2 );
    sensitive << ( ap_block_pp3_stage2_flag00011001 );
    sensitive << ( tmp_14_fu_803_p4 );

    SC_METHOD(thread_indvar_next1_fu_481_p2);
    sensitive << ( indvar1_reg_335 );

    SC_METHOD(thread_indvar_next_fu_394_p2);
    sensitive << ( indvar_phi_fu_303_p4 );

    SC_METHOD(thread_indvar_phi_fu_303_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond6_reg_912 );
    sensitive << ( indvar_reg_299 );
    sensitive << ( indvar_next_reg_916 );

    SC_METHOD(thread_input2_sum5_cast_fu_465_p1);
    sensitive << ( input2_sum5_fu_460_p2 );

    SC_METHOD(thread_input2_sum5_fu_460_p2);
    sensitive << ( tmp_21_cast_reg_907 );
    sensitive << ( tmp_3_cast_fu_456_p1 );

    SC_METHOD(thread_j_fu_520_p2);
    sensitive << ( posx_assign_phi_fu_350_p4 );

    SC_METHOD(thread_k_1_fu_428_p2);
    sensitive << ( k_phi_fu_327_p4 );

    SC_METHOD(thread_k_phi_fu_327_p4);
    sensitive << ( k_reg_323 );
    sensitive << ( exitcond1_reg_936 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( k_1_reg_940 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_flag00000000 );

    SC_METHOD(thread_neg3_fu_765_p2);
    sensitive << ( res_1_fu_759_p2 );

    SC_METHOD(thread_neg_fu_725_p2);
    sensitive << ( res_reg_1040 );

    SC_METHOD(thread_output4_sum7_cast_fu_836_p1);
    sensitive << ( output4_sum7_fu_831_p2 );

    SC_METHOD(thread_output4_sum7_fu_831_p2);
    sensitive << ( tmp_20_cast_reg_901 );
    sensitive << ( tmp_14_cast_fu_827_p1 );

    SC_METHOD(thread_output4_sum_cast_fu_868_p1);
    sensitive << ( output4_sum_fu_863_p2 );

    SC_METHOD(thread_output4_sum_fu_863_p2);
    sensitive << ( tmp_20_cast_reg_901 );
    sensitive << ( tmp_17_cast_fu_859_p1 );

    SC_METHOD(thread_p_fu_797_p2);
    sensitive << ( abs_cast4_fu_781_p1 );
    sensitive << ( abs5_cast3_fu_789_p1 );

    SC_METHOD(thread_position_1_fu_499_p2);
    sensitive << ( position_fu_166 );

    SC_METHOD(thread_posx_assign_cast8_fu_516_p1);
    sensitive << ( posx_assign_phi_fu_350_p4 );

    SC_METHOD(thread_posx_assign_cast_fu_542_p1);
    sensitive << ( posx_assign_reg_346 );

    SC_METHOD(thread_posx_assign_phi_fu_350_p4);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_flag00000000 );
    sensitive << ( posx_assign_reg_346 );
    sensitive << ( exitcond_reg_970 );
    sensitive << ( j_reg_979 );

    SC_METHOD(thread_res_1_fu_759_p2);
    sensitive << ( res_4_i_fu_754_p2 );
    sensitive << ( tmp_40_i_cast_fu_722_p1 );

    SC_METHOD(thread_res_2_cast5_fu_587_p1);
    sensitive << ( small_input_q1 );

    SC_METHOD(thread_res_2_cast_fu_591_p1);
    sensitive << ( small_input_q1 );

    SC_METHOD(thread_res_2_i_cast_fu_713_p1);
    sensitive << ( res_2_i_fu_707_p2 );

    SC_METHOD(thread_res_2_i_fu_707_p2);
    sensitive << ( tmp2_cast_fu_704_p1 );
    sensitive << ( tmp_20_i_cast_fu_700_p1 );

    SC_METHOD(thread_res_3_i_fu_717_p2);
    sensitive << ( tmp_50_i_cast_reg_1035 );
    sensitive << ( res_2_i_cast_fu_713_p1 );

    SC_METHOD(thread_res_4_i_fu_754_p2);
    sensitive << ( res_3_i_reg_1057 );
    sensitive << ( tmp_30_i_cast_fu_750_p1 );

    SC_METHOD(thread_res_7_i_cast_fu_631_p1);
    sensitive << ( res_7_i_fu_625_p2 );

    SC_METHOD(thread_res_7_i_fu_625_p2);
    sensitive << ( tmp1_cast_fu_621_p1 );
    sensitive << ( tmp_37_i_cast_fu_580_p1 );

    SC_METHOD(thread_res_8_i_fu_635_p2);
    sensitive << ( res_7_i_cast_fu_631_p1 );
    sensitive << ( res_2_cast_fu_591_p1 );

    SC_METHOD(thread_res_9_i_fu_663_p2);
    sensitive << ( res_8_i_reg_1025 );
    sensitive << ( tmp_47_i_cast_fu_655_p1 );

    SC_METHOD(thread_res_cast_fu_568_p1);
    sensitive << ( reg_367 );

    SC_METHOD(thread_res_fu_668_p2);
    sensitive << ( tmp_50_i_cast_fu_659_p1 );
    sensitive << ( res_9_i_fu_663_p2 );

    SC_METHOD(thread_small_input_address0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_CS_fsm_pp3_stage3 );
    sensitive << ( ap_block_pp3_stage3_flag00000000 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_flag00000000 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_flag00000000 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp3_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp1_stage0_flag00000000 );
    sensitive << ( tmp_fu_400_p1 );
    sensitive << ( tmp_5_fu_440_p1 );
    sensitive << ( tmp_i_fu_526_p1 );
    sensitive << ( tmp_35_i_fu_552_p1 );
    sensitive << ( tmp_45_i_fu_600_p1 );
    sensitive << ( ap_block_pp3_stage2_flag00000000 );
    sensitive << ( tmp_18_i_fu_674_p1 );

    SC_METHOD(thread_small_input_address1);
    sensitive << ( ap_block_pp2_stage0_flag00000000 );
    sensitive << ( ap_CS_fsm_pp3_stage3 );
    sensitive << ( ap_block_pp3_stage3_flag00000000 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_flag00000000 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_flag00000000 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp3_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_block_pp1_stage0_flag00000000 );
    sensitive << ( tmp_6_fu_445_p1 );
    sensitive << ( tmp_7_fu_495_p1 );
    sensitive << ( tmp_39_i_fu_537_p1 );
    sensitive << ( tmp_42_i_fu_563_p1 );
    sensitive << ( ap_block_pp3_stage2_flag00000000 );
    sensitive << ( tmp_49_i_fu_610_p1 );
    sensitive << ( tmp_28_i_fu_687_p1 );

    SC_METHOD(thread_small_input_ce0);
    sensitive << ( ap_CS_fsm_pp3_stage3 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_block_pp3_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_block_pp3_stage1_flag00011001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp3_stage2 );
    sensitive << ( ap_block_pp3_stage2_flag00011001 );
    sensitive << ( ap_block_pp3_stage3_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_small_input_ce1);
    sensitive << ( ap_CS_fsm_pp3_stage3 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage0_flag00011001 );
    sensitive << ( ap_block_pp2_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_block_pp3_stage1_flag00011001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_flag00011001 );
    sensitive << ( ap_CS_fsm_pp3_stage2 );
    sensitive << ( ap_block_pp3_stage2_flag00011001 );
    sensitive << ( ap_block_pp3_stage3_flag00011001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );

    SC_METHOD(thread_small_input_d1);
    sensitive << ( ap_block_pp2_stage0_flag00000000 );
    sensitive << ( reg_361 );
    sensitive << ( small_input_q0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_block_pp1_stage0_flag00000000 );

    SC_METHOD(thread_small_input_we0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter1_exitcond6_reg_912 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_small_input_we1);
    sensitive << ( ap_block_pp2_stage0_flag00011001 );
    sensitive << ( exitcond1_reg_936 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_flag00011001 );
    sensitive << ( ap_reg_pp2_iter1_exitcond3_reg_956 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );

    SC_METHOD(thread_tmp1_cast_fu_621_p1);
    sensitive << ( tmp1_fu_615_p2 );

    SC_METHOD(thread_tmp1_fu_615_p2);
    sensitive << ( res_cast_fu_568_p1 );
    sensitive << ( tmp_40_i_cast6_fu_584_p1 );

    SC_METHOD(thread_tmp2_cast_fu_704_p1);
    sensitive << ( tmp2_reg_1030 );

    SC_METHOD(thread_tmp2_fu_641_p2);
    sensitive << ( res_cast_fu_568_p1 );
    sensitive << ( res_2_cast5_fu_587_p1 );

    SC_METHOD(thread_tmp_11_fu_777_p1);
    sensitive << ( abs_fu_735_p3 );

    SC_METHOD(thread_tmp_12_fu_793_p1);
    sensitive << ( abs5_fu_784_p3 );

    SC_METHOD(thread_tmp_13_fu_819_p3);
    sensitive << ( ap_reg_pp3_iter1_posx_assign_reg_346 );
    sensitive << ( i_reg_311 );

    SC_METHOD(thread_tmp_14_cast_fu_827_p1);
    sensitive << ( tmp_13_fu_819_p3 );

    SC_METHOD(thread_tmp_14_fu_803_p4);
    sensitive << ( p_fu_797_p2 );

    SC_METHOD(thread_tmp_15_fu_846_p2);
    sensitive << ( tmp_11_reg_1082 );
    sensitive << ( tmp_12_fu_793_p1 );

    SC_METHOD(thread_tmp_16_fu_851_p3);
    sensitive << ( ap_reg_pp3_iter1_posx_assign_reg_346 );
    sensitive << ( i_reg_311 );

    SC_METHOD(thread_tmp_17_cast_fu_859_p1);
    sensitive << ( tmp_16_fu_851_p3 );

    SC_METHOD(thread_tmp_18_i_fu_674_p1);
    sensitive << ( posx_assign_reg_346 );

    SC_METHOD(thread_tmp_1_fu_416_p2);
    sensitive << ( exitcond2_fu_410_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( i_reg_311 );

    SC_METHOD(thread_tmp_20_cast_fu_382_p1);
    sensitive << ( output_read_reg_884 );

    SC_METHOD(thread_tmp_20_i_cast_fu_700_p1);
    sensitive << ( tmp_20_i_fu_692_p3 );

    SC_METHOD(thread_tmp_20_i_fu_692_p3);
    sensitive << ( small_input_q0 );

    SC_METHOD(thread_tmp_21_cast_fu_385_p1);
    sensitive << ( input_read_reg_889 );

    SC_METHOD(thread_tmp_27_i_fu_679_p3);
    sensitive << ( posx_assign_reg_346 );

    SC_METHOD(thread_tmp_28_i_fu_687_p1);
    sensitive << ( tmp_27_i_fu_679_p3 );

    SC_METHOD(thread_tmp_2_fu_372_p1);
    sensitive << ( input_read_reg_889 );

    SC_METHOD(thread_tmp_30_i_cast_fu_750_p1);
    sensitive << ( tmp_30_i_fu_742_p3 );

    SC_METHOD(thread_tmp_30_i_fu_742_p3);
    sensitive << ( reg_367 );

    SC_METHOD(thread_tmp_34_i_fu_546_p2);
    sensitive << ( posx_assign_cast_fu_542_p1 );

    SC_METHOD(thread_tmp_35_i_fu_552_p1);
    sensitive << ( tmp_34_i_fu_546_p2 );

    SC_METHOD(thread_tmp_37_i_cast_fu_580_p1);
    sensitive << ( tmp_37_i_fu_572_p3 );

    SC_METHOD(thread_tmp_37_i_fu_572_p3);
    sensitive << ( small_input_q0 );

    SC_METHOD(thread_tmp_38_i_fu_531_p2);
    sensitive << ( posx_assign_cast8_fu_516_p1 );

    SC_METHOD(thread_tmp_39_i_fu_537_p1);
    sensitive << ( tmp_38_i_fu_531_p2 );

    SC_METHOD(thread_tmp_3_cast_fu_456_p1);
    sensitive << ( tmp_3_fu_450_p2 );

    SC_METHOD(thread_tmp_3_fu_450_p2);
    sensitive << ( position_fu_166 );

    SC_METHOD(thread_tmp_40_i_cast6_fu_584_p1);
    sensitive << ( small_input_load_3_reg_1004 );

    SC_METHOD(thread_tmp_40_i_cast_fu_722_p1);
    sensitive << ( small_input_load_3_reg_1004 );

    SC_METHOD(thread_tmp_41_i_fu_557_p2);
    sensitive << ( posx_assign_reg_346 );

    SC_METHOD(thread_tmp_42_i_fu_563_p1);
    sensitive << ( tmp_41_i_fu_557_p2 );

    SC_METHOD(thread_tmp_44_i_fu_595_p2);
    sensitive << ( posx_assign_cast_reg_994 );

    SC_METHOD(thread_tmp_45_i_fu_600_p1);
    sensitive << ( tmp_44_i_fu_595_p2 );

    SC_METHOD(thread_tmp_47_i_cast_fu_655_p1);
    sensitive << ( tmp_47_i_fu_647_p3 );

    SC_METHOD(thread_tmp_47_i_fu_647_p3);
    sensitive << ( small_input_q0 );

    SC_METHOD(thread_tmp_48_i_fu_605_p2);
    sensitive << ( posx_assign_cast8_reg_974 );

    SC_METHOD(thread_tmp_49_i_fu_610_p1);
    sensitive << ( tmp_48_i_fu_605_p2 );

    SC_METHOD(thread_tmp_4_fu_434_p2);
    sensitive << ( k_phi_fu_327_p4 );

    SC_METHOD(thread_tmp_50_i_cast_fu_659_p1);
    sensitive << ( small_input_q1 );

    SC_METHOD(thread_tmp_5_fu_440_p1);
    sensitive << ( tmp_4_fu_434_p2 );

    SC_METHOD(thread_tmp_6_fu_445_p1);
    sensitive << ( k_reg_323 );

    SC_METHOD(thread_tmp_7_fu_495_p1);
    sensitive << ( ap_reg_pp2_iter1_tmp_9_reg_965 );

    SC_METHOD(thread_tmp_9_fu_487_p3);
    sensitive << ( indvar1_reg_335 );

    SC_METHOD(thread_tmp_fu_400_p1);
    sensitive << ( ap_reg_pp0_iter1_indvar_reg_299 );

    SC_METHOD(thread_tmp_i_fu_526_p1);
    sensitive << ( j_fu_520_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_enable_reg_pp3_iter3 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_sig_ioackin_INPUT_r_ARREADY );
    sensitive << ( exitcond6_fu_388_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_fu_410_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_1_fu_416_p2 );
    sensitive << ( exitcond1_fu_422_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( exitcond3_fu_475_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( exitcond_fu_510_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp1_stage0_flag00011011 );
    sensitive << ( ap_block_pp2_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_block_pp3_stage0_flag00011011 );
    sensitive << ( ap_block_pp3_stage3_flag00011011 );
    sensitive << ( ap_block_pp3_stage1_flag00011011 );
    sensitive << ( ap_block_pp3_stage2_flag00011011 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const9);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const7);

    ap_CS_fsm = "000000000000000000000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter2 = SC_LOGIC_0;
    ap_reg_ioackin_INPUT_r_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_OUTPUT_r_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_OUTPUT_r_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sobel_sw_new_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWVALID, "(port)m_axi_INPUT_r_AWVALID");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWREADY, "(port)m_axi_INPUT_r_AWREADY");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWADDR, "(port)m_axi_INPUT_r_AWADDR");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWID, "(port)m_axi_INPUT_r_AWID");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWLEN, "(port)m_axi_INPUT_r_AWLEN");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWSIZE, "(port)m_axi_INPUT_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWBURST, "(port)m_axi_INPUT_r_AWBURST");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWLOCK, "(port)m_axi_INPUT_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWCACHE, "(port)m_axi_INPUT_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWPROT, "(port)m_axi_INPUT_r_AWPROT");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWQOS, "(port)m_axi_INPUT_r_AWQOS");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWREGION, "(port)m_axi_INPUT_r_AWREGION");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWUSER, "(port)m_axi_INPUT_r_AWUSER");
    sc_trace(mVcdFile, m_axi_INPUT_r_WVALID, "(port)m_axi_INPUT_r_WVALID");
    sc_trace(mVcdFile, m_axi_INPUT_r_WREADY, "(port)m_axi_INPUT_r_WREADY");
    sc_trace(mVcdFile, m_axi_INPUT_r_WDATA, "(port)m_axi_INPUT_r_WDATA");
    sc_trace(mVcdFile, m_axi_INPUT_r_WSTRB, "(port)m_axi_INPUT_r_WSTRB");
    sc_trace(mVcdFile, m_axi_INPUT_r_WLAST, "(port)m_axi_INPUT_r_WLAST");
    sc_trace(mVcdFile, m_axi_INPUT_r_WID, "(port)m_axi_INPUT_r_WID");
    sc_trace(mVcdFile, m_axi_INPUT_r_WUSER, "(port)m_axi_INPUT_r_WUSER");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARVALID, "(port)m_axi_INPUT_r_ARVALID");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARREADY, "(port)m_axi_INPUT_r_ARREADY");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARADDR, "(port)m_axi_INPUT_r_ARADDR");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARID, "(port)m_axi_INPUT_r_ARID");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARLEN, "(port)m_axi_INPUT_r_ARLEN");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARSIZE, "(port)m_axi_INPUT_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARBURST, "(port)m_axi_INPUT_r_ARBURST");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARLOCK, "(port)m_axi_INPUT_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARCACHE, "(port)m_axi_INPUT_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARPROT, "(port)m_axi_INPUT_r_ARPROT");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARQOS, "(port)m_axi_INPUT_r_ARQOS");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARREGION, "(port)m_axi_INPUT_r_ARREGION");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARUSER, "(port)m_axi_INPUT_r_ARUSER");
    sc_trace(mVcdFile, m_axi_INPUT_r_RVALID, "(port)m_axi_INPUT_r_RVALID");
    sc_trace(mVcdFile, m_axi_INPUT_r_RREADY, "(port)m_axi_INPUT_r_RREADY");
    sc_trace(mVcdFile, m_axi_INPUT_r_RDATA, "(port)m_axi_INPUT_r_RDATA");
    sc_trace(mVcdFile, m_axi_INPUT_r_RLAST, "(port)m_axi_INPUT_r_RLAST");
    sc_trace(mVcdFile, m_axi_INPUT_r_RID, "(port)m_axi_INPUT_r_RID");
    sc_trace(mVcdFile, m_axi_INPUT_r_RUSER, "(port)m_axi_INPUT_r_RUSER");
    sc_trace(mVcdFile, m_axi_INPUT_r_RRESP, "(port)m_axi_INPUT_r_RRESP");
    sc_trace(mVcdFile, m_axi_INPUT_r_BVALID, "(port)m_axi_INPUT_r_BVALID");
    sc_trace(mVcdFile, m_axi_INPUT_r_BREADY, "(port)m_axi_INPUT_r_BREADY");
    sc_trace(mVcdFile, m_axi_INPUT_r_BRESP, "(port)m_axi_INPUT_r_BRESP");
    sc_trace(mVcdFile, m_axi_INPUT_r_BID, "(port)m_axi_INPUT_r_BID");
    sc_trace(mVcdFile, m_axi_INPUT_r_BUSER, "(port)m_axi_INPUT_r_BUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWVALID, "(port)m_axi_OUTPUT_r_AWVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWREADY, "(port)m_axi_OUTPUT_r_AWREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWADDR, "(port)m_axi_OUTPUT_r_AWADDR");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWID, "(port)m_axi_OUTPUT_r_AWID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWLEN, "(port)m_axi_OUTPUT_r_AWLEN");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWSIZE, "(port)m_axi_OUTPUT_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWBURST, "(port)m_axi_OUTPUT_r_AWBURST");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWLOCK, "(port)m_axi_OUTPUT_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWCACHE, "(port)m_axi_OUTPUT_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWPROT, "(port)m_axi_OUTPUT_r_AWPROT");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWQOS, "(port)m_axi_OUTPUT_r_AWQOS");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWREGION, "(port)m_axi_OUTPUT_r_AWREGION");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWUSER, "(port)m_axi_OUTPUT_r_AWUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WVALID, "(port)m_axi_OUTPUT_r_WVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WREADY, "(port)m_axi_OUTPUT_r_WREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WDATA, "(port)m_axi_OUTPUT_r_WDATA");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WSTRB, "(port)m_axi_OUTPUT_r_WSTRB");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WLAST, "(port)m_axi_OUTPUT_r_WLAST");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WID, "(port)m_axi_OUTPUT_r_WID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WUSER, "(port)m_axi_OUTPUT_r_WUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARVALID, "(port)m_axi_OUTPUT_r_ARVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARREADY, "(port)m_axi_OUTPUT_r_ARREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARADDR, "(port)m_axi_OUTPUT_r_ARADDR");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARID, "(port)m_axi_OUTPUT_r_ARID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARLEN, "(port)m_axi_OUTPUT_r_ARLEN");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARSIZE, "(port)m_axi_OUTPUT_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARBURST, "(port)m_axi_OUTPUT_r_ARBURST");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARLOCK, "(port)m_axi_OUTPUT_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARCACHE, "(port)m_axi_OUTPUT_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARPROT, "(port)m_axi_OUTPUT_r_ARPROT");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARQOS, "(port)m_axi_OUTPUT_r_ARQOS");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARREGION, "(port)m_axi_OUTPUT_r_ARREGION");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARUSER, "(port)m_axi_OUTPUT_r_ARUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RVALID, "(port)m_axi_OUTPUT_r_RVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RREADY, "(port)m_axi_OUTPUT_r_RREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RDATA, "(port)m_axi_OUTPUT_r_RDATA");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RLAST, "(port)m_axi_OUTPUT_r_RLAST");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RID, "(port)m_axi_OUTPUT_r_RID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RUSER, "(port)m_axi_OUTPUT_r_RUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RRESP, "(port)m_axi_OUTPUT_r_RRESP");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_BVALID, "(port)m_axi_OUTPUT_r_BVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_BREADY, "(port)m_axi_OUTPUT_r_BREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_BRESP, "(port)m_axi_OUTPUT_r_BRESP");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_BID, "(port)m_axi_OUTPUT_r_BID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_BUSER, "(port)m_axi_OUTPUT_r_BUSER");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWVALID, "(port)s_axi_CTRL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWREADY, "(port)s_axi_CTRL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWADDR, "(port)s_axi_CTRL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WVALID, "(port)s_axi_CTRL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WREADY, "(port)s_axi_CTRL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WDATA, "(port)s_axi_CTRL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WSTRB, "(port)s_axi_CTRL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARVALID, "(port)s_axi_CTRL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARREADY, "(port)s_axi_CTRL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARADDR, "(port)s_axi_CTRL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RVALID, "(port)s_axi_CTRL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RREADY, "(port)s_axi_CTRL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RDATA, "(port)s_axi_CTRL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RRESP, "(port)s_axi_CTRL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BVALID, "(port)s_axi_CTRL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BREADY, "(port)s_axi_CTRL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BRESP, "(port)s_axi_CTRL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, input_r_r, "input_r_r");
    sc_trace(mVcdFile, output_r_r, "output_r_r");
    sc_trace(mVcdFile, INPUT_r_blk_n_AR, "INPUT_r_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, INPUT_r_blk_n_R, "INPUT_r_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond6_reg_912, "exitcond6_reg_912");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_flag00000000, "ap_block_pp2_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond3_reg_956, "exitcond3_reg_956");
    sc_trace(mVcdFile, OUTPUT_r_blk_n_AW, "OUTPUT_r_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage3, "ap_CS_fsm_pp3_stage3");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter1, "ap_enable_reg_pp3_iter1");
    sc_trace(mVcdFile, ap_block_pp3_stage3_flag00000000, "ap_block_pp3_stage3_flag00000000");
    sc_trace(mVcdFile, icmp_reg_1087, "icmp_reg_1087");
    sc_trace(mVcdFile, OUTPUT_r_blk_n_W, "OUTPUT_r_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage0, "ap_CS_fsm_pp3_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter2, "ap_enable_reg_pp3_iter2");
    sc_trace(mVcdFile, ap_block_pp3_stage0_flag00000000, "ap_block_pp3_stage0_flag00000000");
    sc_trace(mVcdFile, OUTPUT_r_blk_n_B, "OUTPUT_r_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage1, "ap_CS_fsm_pp3_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter3, "ap_enable_reg_pp3_iter3");
    sc_trace(mVcdFile, ap_block_pp3_stage1_flag00000000, "ap_block_pp3_stage1_flag00000000");
    sc_trace(mVcdFile, ap_reg_pp3_iter2_icmp_reg_1087, "ap_reg_pp3_iter2_icmp_reg_1087");
    sc_trace(mVcdFile, INPUT_r_AWREADY, "INPUT_r_AWREADY");
    sc_trace(mVcdFile, INPUT_r_WREADY, "INPUT_r_WREADY");
    sc_trace(mVcdFile, INPUT_r_ARVALID, "INPUT_r_ARVALID");
    sc_trace(mVcdFile, INPUT_r_ARREADY, "INPUT_r_ARREADY");
    sc_trace(mVcdFile, INPUT_r_ARADDR, "INPUT_r_ARADDR");
    sc_trace(mVcdFile, INPUT_r_ARLEN, "INPUT_r_ARLEN");
    sc_trace(mVcdFile, INPUT_r_RVALID, "INPUT_r_RVALID");
    sc_trace(mVcdFile, INPUT_r_RREADY, "INPUT_r_RREADY");
    sc_trace(mVcdFile, INPUT_r_RDATA, "INPUT_r_RDATA");
    sc_trace(mVcdFile, INPUT_r_RLAST, "INPUT_r_RLAST");
    sc_trace(mVcdFile, INPUT_r_RID, "INPUT_r_RID");
    sc_trace(mVcdFile, INPUT_r_RUSER, "INPUT_r_RUSER");
    sc_trace(mVcdFile, INPUT_r_RRESP, "INPUT_r_RRESP");
    sc_trace(mVcdFile, INPUT_r_BVALID, "INPUT_r_BVALID");
    sc_trace(mVcdFile, INPUT_r_BRESP, "INPUT_r_BRESP");
    sc_trace(mVcdFile, INPUT_r_BID, "INPUT_r_BID");
    sc_trace(mVcdFile, INPUT_r_BUSER, "INPUT_r_BUSER");
    sc_trace(mVcdFile, OUTPUT_r_AWVALID, "OUTPUT_r_AWVALID");
    sc_trace(mVcdFile, OUTPUT_r_AWREADY, "OUTPUT_r_AWREADY");
    sc_trace(mVcdFile, OUTPUT_r_AWADDR, "OUTPUT_r_AWADDR");
    sc_trace(mVcdFile, OUTPUT_r_WVALID, "OUTPUT_r_WVALID");
    sc_trace(mVcdFile, OUTPUT_r_WREADY, "OUTPUT_r_WREADY");
    sc_trace(mVcdFile, OUTPUT_r_WDATA, "OUTPUT_r_WDATA");
    sc_trace(mVcdFile, OUTPUT_r_ARREADY, "OUTPUT_r_ARREADY");
    sc_trace(mVcdFile, OUTPUT_r_RVALID, "OUTPUT_r_RVALID");
    sc_trace(mVcdFile, OUTPUT_r_RDATA, "OUTPUT_r_RDATA");
    sc_trace(mVcdFile, OUTPUT_r_RLAST, "OUTPUT_r_RLAST");
    sc_trace(mVcdFile, OUTPUT_r_RID, "OUTPUT_r_RID");
    sc_trace(mVcdFile, OUTPUT_r_RUSER, "OUTPUT_r_RUSER");
    sc_trace(mVcdFile, OUTPUT_r_RRESP, "OUTPUT_r_RRESP");
    sc_trace(mVcdFile, OUTPUT_r_BVALID, "OUTPUT_r_BVALID");
    sc_trace(mVcdFile, OUTPUT_r_BREADY, "OUTPUT_r_BREADY");
    sc_trace(mVcdFile, OUTPUT_r_BRESP, "OUTPUT_r_BRESP");
    sc_trace(mVcdFile, OUTPUT_r_BID, "OUTPUT_r_BID");
    sc_trace(mVcdFile, OUTPUT_r_BUSER, "OUTPUT_r_BUSER");
    sc_trace(mVcdFile, indvar_reg_299, "indvar_reg_299");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_indvar_reg_299, "ap_reg_pp0_iter1_indvar_reg_299");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter0, "ap_block_state9_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter2, "ap_block_state11_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, k_reg_323, "k_reg_323");
    sc_trace(mVcdFile, indvar1_reg_335, "indvar1_reg_335");
    sc_trace(mVcdFile, posx_assign_reg_346, "posx_assign_reg_346");
    sc_trace(mVcdFile, ap_reg_pp3_iter1_posx_assign_reg_346, "ap_reg_pp3_iter1_posx_assign_reg_346");
    sc_trace(mVcdFile, ap_block_state28_pp3_stage0_iter0, "ap_block_state28_pp3_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state32_pp3_stage0_iter1, "ap_block_state32_pp3_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state36_pp3_stage0_iter2, "ap_block_state36_pp3_stage0_iter2");
    sc_trace(mVcdFile, ap_sig_ioackin_OUTPUT_r_WREADY, "ap_sig_ioackin_OUTPUT_r_WREADY");
    sc_trace(mVcdFile, ap_block_state36_io, "ap_block_state36_io");
    sc_trace(mVcdFile, ap_block_state40_pp3_stage0_iter3, "ap_block_state40_pp3_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp3_stage0_flag00011001, "ap_block_pp3_stage0_flag00011001");
    sc_trace(mVcdFile, reg_361, "reg_361");
    sc_trace(mVcdFile, ap_block_state24_pp2_stage0_iter0, "ap_block_state24_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state25_pp2_stage0_iter1, "ap_block_state25_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state26_pp2_stage0_iter2, "ap_block_state26_pp2_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp2_stage0_flag00011001, "ap_block_pp2_stage0_flag00011001");
    sc_trace(mVcdFile, small_input_q0, "small_input_q0");
    sc_trace(mVcdFile, reg_367, "reg_367");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter0, "ap_enable_reg_pp3_iter0");
    sc_trace(mVcdFile, ap_block_state29_pp3_stage1_iter0, "ap_block_state29_pp3_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state33_pp3_stage1_iter1, "ap_block_state33_pp3_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state37_pp3_stage1_iter2, "ap_block_state37_pp3_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state41_pp3_stage1_iter3, "ap_block_state41_pp3_stage1_iter3");
    sc_trace(mVcdFile, ap_block_pp3_stage1_flag00011001, "ap_block_pp3_stage1_flag00011001");
    sc_trace(mVcdFile, exitcond_reg_970, "exitcond_reg_970");
    sc_trace(mVcdFile, small_input_q1, "small_input_q1");
    sc_trace(mVcdFile, output_read_reg_884, "output_read_reg_884");
    sc_trace(mVcdFile, input_read_reg_889, "input_read_reg_889");
    sc_trace(mVcdFile, ap_sig_ioackin_INPUT_r_ARREADY, "ap_sig_ioackin_INPUT_r_ARREADY");
    sc_trace(mVcdFile, tmp_20_cast_fu_382_p1, "tmp_20_cast_fu_382_p1");
    sc_trace(mVcdFile, tmp_20_cast_reg_901, "tmp_20_cast_reg_901");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_21_cast_fu_385_p1, "tmp_21_cast_fu_385_p1");
    sc_trace(mVcdFile, tmp_21_cast_reg_907, "tmp_21_cast_reg_907");
    sc_trace(mVcdFile, exitcond6_fu_388_p2, "exitcond6_fu_388_p2");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond6_reg_912, "ap_reg_pp0_iter1_exitcond6_reg_912");
    sc_trace(mVcdFile, indvar_next_fu_394_p2, "indvar_next_fu_394_p2");
    sc_trace(mVcdFile, indvar_next_reg_916, "indvar_next_reg_916");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond2_fu_410_p2, "exitcond2_fu_410_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_1_fu_416_p2, "tmp_1_fu_416_p2");
    sc_trace(mVcdFile, tmp_1_reg_932, "tmp_1_reg_932");
    sc_trace(mVcdFile, exitcond1_fu_422_p2, "exitcond1_fu_422_p2");
    sc_trace(mVcdFile, exitcond1_reg_936, "exitcond1_reg_936");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state14_pp1_stage0_iter0, "ap_block_state14_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state15_pp1_stage0_iter1, "ap_block_state15_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_flag00011001, "ap_block_pp1_stage0_flag00011001");
    sc_trace(mVcdFile, k_1_fu_428_p2, "k_1_fu_428_p2");
    sc_trace(mVcdFile, k_1_reg_940, "k_1_reg_940");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, INPUT_addr_1_reg_950, "INPUT_addr_1_reg_950");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, exitcond3_fu_475_p2, "exitcond3_fu_475_p2");
    sc_trace(mVcdFile, ap_reg_pp2_iter1_exitcond3_reg_956, "ap_reg_pp2_iter1_exitcond3_reg_956");
    sc_trace(mVcdFile, indvar_next1_fu_481_p2, "indvar_next1_fu_481_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, tmp_9_fu_487_p3, "tmp_9_fu_487_p3");
    sc_trace(mVcdFile, tmp_9_reg_965, "tmp_9_reg_965");
    sc_trace(mVcdFile, ap_reg_pp2_iter1_tmp_9_reg_965, "ap_reg_pp2_iter1_tmp_9_reg_965");
    sc_trace(mVcdFile, exitcond_fu_510_p2, "exitcond_fu_510_p2");
    sc_trace(mVcdFile, ap_reg_pp3_iter1_exitcond_reg_970, "ap_reg_pp3_iter1_exitcond_reg_970");
    sc_trace(mVcdFile, posx_assign_cast8_fu_516_p1, "posx_assign_cast8_fu_516_p1");
    sc_trace(mVcdFile, posx_assign_cast8_reg_974, "posx_assign_cast8_reg_974");
    sc_trace(mVcdFile, j_fu_520_p2, "j_fu_520_p2");
    sc_trace(mVcdFile, j_reg_979, "j_reg_979");
    sc_trace(mVcdFile, posx_assign_cast_fu_542_p1, "posx_assign_cast_fu_542_p1");
    sc_trace(mVcdFile, posx_assign_cast_reg_994, "posx_assign_cast_reg_994");
    sc_trace(mVcdFile, small_input_load_3_reg_1004, "small_input_load_3_reg_1004");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage2, "ap_CS_fsm_pp3_stage2");
    sc_trace(mVcdFile, ap_block_state30_pp3_stage2_iter0, "ap_block_state30_pp3_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state34_pp3_stage2_iter1, "ap_block_state34_pp3_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state38_pp3_stage2_iter2, "ap_block_state38_pp3_stage2_iter2");
    sc_trace(mVcdFile, ap_block_pp3_stage2_flag00011001, "ap_block_pp3_stage2_flag00011001");
    sc_trace(mVcdFile, res_8_i_fu_635_p2, "res_8_i_fu_635_p2");
    sc_trace(mVcdFile, res_8_i_reg_1025, "res_8_i_reg_1025");
    sc_trace(mVcdFile, tmp2_fu_641_p2, "tmp2_fu_641_p2");
    sc_trace(mVcdFile, tmp2_reg_1030, "tmp2_reg_1030");
    sc_trace(mVcdFile, tmp_50_i_cast_fu_659_p1, "tmp_50_i_cast_fu_659_p1");
    sc_trace(mVcdFile, tmp_50_i_cast_reg_1035, "tmp_50_i_cast_reg_1035");
    sc_trace(mVcdFile, ap_block_state31_pp3_stage3_iter0, "ap_block_state31_pp3_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state35_pp3_stage3_iter1, "ap_block_state35_pp3_stage3_iter1");
    sc_trace(mVcdFile, ap_sig_ioackin_OUTPUT_r_AWREADY, "ap_sig_ioackin_OUTPUT_r_AWREADY");
    sc_trace(mVcdFile, ap_block_state35_io, "ap_block_state35_io");
    sc_trace(mVcdFile, ap_block_state39_pp3_stage3_iter2, "ap_block_state39_pp3_stage3_iter2");
    sc_trace(mVcdFile, ap_block_pp3_stage3_flag00011001, "ap_block_pp3_stage3_flag00011001");
    sc_trace(mVcdFile, res_fu_668_p2, "res_fu_668_p2");
    sc_trace(mVcdFile, res_reg_1040, "res_reg_1040");
    sc_trace(mVcdFile, res_3_i_fu_717_p2, "res_3_i_fu_717_p2");
    sc_trace(mVcdFile, res_3_i_reg_1057, "res_3_i_reg_1057");
    sc_trace(mVcdFile, abs_fu_735_p3, "abs_fu_735_p3");
    sc_trace(mVcdFile, abs_reg_1062, "abs_reg_1062");
    sc_trace(mVcdFile, res_1_fu_759_p2, "res_1_fu_759_p2");
    sc_trace(mVcdFile, res_1_reg_1067, "res_1_reg_1067");
    sc_trace(mVcdFile, neg3_fu_765_p2, "neg3_fu_765_p2");
    sc_trace(mVcdFile, neg3_reg_1072, "neg3_reg_1072");
    sc_trace(mVcdFile, abscond4_fu_771_p2, "abscond4_fu_771_p2");
    sc_trace(mVcdFile, abscond4_reg_1077, "abscond4_reg_1077");
    sc_trace(mVcdFile, tmp_11_fu_777_p1, "tmp_11_fu_777_p1");
    sc_trace(mVcdFile, tmp_11_reg_1082, "tmp_11_reg_1082");
    sc_trace(mVcdFile, icmp_fu_813_p2, "icmp_fu_813_p2");
    sc_trace(mVcdFile, OUTPUT_addr_reg_1091, "OUTPUT_addr_reg_1091");
    sc_trace(mVcdFile, tmp_15_fu_846_p2, "tmp_15_fu_846_p2");
    sc_trace(mVcdFile, tmp_15_reg_1096, "tmp_15_reg_1096");
    sc_trace(mVcdFile, OUTPUT_addr_1_reg_1101, "OUTPUT_addr_1_reg_1101");
    sc_trace(mVcdFile, i_1_fu_878_p2, "i_1_fu_878_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state9, "ap_condition_pp0_exit_iter0_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_flag00011011, "ap_block_pp1_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state14, "ap_condition_pp1_exit_iter0_state14");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_block_pp2_stage0_flag00011011, "ap_block_pp2_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state24, "ap_condition_pp2_exit_iter0_state24");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter2, "ap_enable_reg_pp2_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_block_pp3_stage0_flag00011011, "ap_block_pp3_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp3_exit_iter0_state28, "ap_condition_pp3_exit_iter0_state28");
    sc_trace(mVcdFile, ap_block_pp3_stage3_flag00011011, "ap_block_pp3_stage3_flag00011011");
    sc_trace(mVcdFile, ap_block_pp3_stage1_flag00011011, "ap_block_pp3_stage1_flag00011011");
    sc_trace(mVcdFile, small_input_address0, "small_input_address0");
    sc_trace(mVcdFile, small_input_ce0, "small_input_ce0");
    sc_trace(mVcdFile, small_input_we0, "small_input_we0");
    sc_trace(mVcdFile, small_input_address1, "small_input_address1");
    sc_trace(mVcdFile, small_input_ce1, "small_input_ce1");
    sc_trace(mVcdFile, small_input_we1, "small_input_we1");
    sc_trace(mVcdFile, small_input_d1, "small_input_d1");
    sc_trace(mVcdFile, indvar_phi_fu_303_p4, "indvar_phi_fu_303_p4");
    sc_trace(mVcdFile, i_reg_311, "i_reg_311");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, k_phi_fu_327_p4, "k_phi_fu_327_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0_flag00000000, "ap_block_pp1_stage0_flag00000000");
    sc_trace(mVcdFile, posx_assign_phi_fu_350_p4, "posx_assign_phi_fu_350_p4");
    sc_trace(mVcdFile, tmp_fu_400_p1, "tmp_fu_400_p1");
    sc_trace(mVcdFile, tmp_5_fu_440_p1, "tmp_5_fu_440_p1");
    sc_trace(mVcdFile, tmp_6_fu_445_p1, "tmp_6_fu_445_p1");
    sc_trace(mVcdFile, tmp_7_fu_495_p1, "tmp_7_fu_495_p1");
    sc_trace(mVcdFile, tmp_i_fu_526_p1, "tmp_i_fu_526_p1");
    sc_trace(mVcdFile, tmp_39_i_fu_537_p1, "tmp_39_i_fu_537_p1");
    sc_trace(mVcdFile, tmp_35_i_fu_552_p1, "tmp_35_i_fu_552_p1");
    sc_trace(mVcdFile, tmp_42_i_fu_563_p1, "tmp_42_i_fu_563_p1");
    sc_trace(mVcdFile, tmp_45_i_fu_600_p1, "tmp_45_i_fu_600_p1");
    sc_trace(mVcdFile, ap_block_pp3_stage2_flag00000000, "ap_block_pp3_stage2_flag00000000");
    sc_trace(mVcdFile, tmp_49_i_fu_610_p1, "tmp_49_i_fu_610_p1");
    sc_trace(mVcdFile, tmp_18_i_fu_674_p1, "tmp_18_i_fu_674_p1");
    sc_trace(mVcdFile, tmp_28_i_fu_687_p1, "tmp_28_i_fu_687_p1");
    sc_trace(mVcdFile, tmp_2_fu_372_p1, "tmp_2_fu_372_p1");
    sc_trace(mVcdFile, input2_sum5_cast_fu_465_p1, "input2_sum5_cast_fu_465_p1");
    sc_trace(mVcdFile, output4_sum7_cast_fu_836_p1, "output4_sum7_cast_fu_836_p1");
    sc_trace(mVcdFile, output4_sum_cast_fu_868_p1, "output4_sum_cast_fu_868_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_INPUT_r_ARREADY, "ap_reg_ioackin_INPUT_r_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_OUTPUT_r_AWREADY, "ap_reg_ioackin_OUTPUT_r_AWREADY");
    sc_trace(mVcdFile, ap_block_pp3_stage3_flag00001001, "ap_block_pp3_stage3_flag00001001");
    sc_trace(mVcdFile, ap_reg_ioackin_OUTPUT_r_WREADY, "ap_reg_ioackin_OUTPUT_r_WREADY");
    sc_trace(mVcdFile, ap_block_pp3_stage0_flag00001001, "ap_block_pp3_stage0_flag00001001");
    sc_trace(mVcdFile, position_fu_166, "position_fu_166");
    sc_trace(mVcdFile, position_1_fu_499_p2, "position_1_fu_499_p2");
    sc_trace(mVcdFile, tmp_4_fu_434_p2, "tmp_4_fu_434_p2");
    sc_trace(mVcdFile, tmp_3_fu_450_p2, "tmp_3_fu_450_p2");
    sc_trace(mVcdFile, tmp_3_cast_fu_456_p1, "tmp_3_cast_fu_456_p1");
    sc_trace(mVcdFile, input2_sum5_fu_460_p2, "input2_sum5_fu_460_p2");
    sc_trace(mVcdFile, tmp_38_i_fu_531_p2, "tmp_38_i_fu_531_p2");
    sc_trace(mVcdFile, tmp_34_i_fu_546_p2, "tmp_34_i_fu_546_p2");
    sc_trace(mVcdFile, tmp_41_i_fu_557_p2, "tmp_41_i_fu_557_p2");
    sc_trace(mVcdFile, tmp_37_i_fu_572_p3, "tmp_37_i_fu_572_p3");
    sc_trace(mVcdFile, tmp_44_i_fu_595_p2, "tmp_44_i_fu_595_p2");
    sc_trace(mVcdFile, tmp_48_i_fu_605_p2, "tmp_48_i_fu_605_p2");
    sc_trace(mVcdFile, res_cast_fu_568_p1, "res_cast_fu_568_p1");
    sc_trace(mVcdFile, tmp_40_i_cast6_fu_584_p1, "tmp_40_i_cast6_fu_584_p1");
    sc_trace(mVcdFile, tmp1_fu_615_p2, "tmp1_fu_615_p2");
    sc_trace(mVcdFile, tmp1_cast_fu_621_p1, "tmp1_cast_fu_621_p1");
    sc_trace(mVcdFile, tmp_37_i_cast_fu_580_p1, "tmp_37_i_cast_fu_580_p1");
    sc_trace(mVcdFile, res_7_i_fu_625_p2, "res_7_i_fu_625_p2");
    sc_trace(mVcdFile, res_7_i_cast_fu_631_p1, "res_7_i_cast_fu_631_p1");
    sc_trace(mVcdFile, res_2_cast_fu_591_p1, "res_2_cast_fu_591_p1");
    sc_trace(mVcdFile, res_2_cast5_fu_587_p1, "res_2_cast5_fu_587_p1");
    sc_trace(mVcdFile, tmp_47_i_fu_647_p3, "tmp_47_i_fu_647_p3");
    sc_trace(mVcdFile, tmp_47_i_cast_fu_655_p1, "tmp_47_i_cast_fu_655_p1");
    sc_trace(mVcdFile, res_9_i_fu_663_p2, "res_9_i_fu_663_p2");
    sc_trace(mVcdFile, tmp_27_i_fu_679_p3, "tmp_27_i_fu_679_p3");
    sc_trace(mVcdFile, tmp_20_i_fu_692_p3, "tmp_20_i_fu_692_p3");
    sc_trace(mVcdFile, tmp2_cast_fu_704_p1, "tmp2_cast_fu_704_p1");
    sc_trace(mVcdFile, tmp_20_i_cast_fu_700_p1, "tmp_20_i_cast_fu_700_p1");
    sc_trace(mVcdFile, res_2_i_fu_707_p2, "res_2_i_fu_707_p2");
    sc_trace(mVcdFile, res_2_i_cast_fu_713_p1, "res_2_i_cast_fu_713_p1");
    sc_trace(mVcdFile, abscond_fu_730_p2, "abscond_fu_730_p2");
    sc_trace(mVcdFile, neg_fu_725_p2, "neg_fu_725_p2");
    sc_trace(mVcdFile, tmp_30_i_fu_742_p3, "tmp_30_i_fu_742_p3");
    sc_trace(mVcdFile, tmp_30_i_cast_fu_750_p1, "tmp_30_i_cast_fu_750_p1");
    sc_trace(mVcdFile, res_4_i_fu_754_p2, "res_4_i_fu_754_p2");
    sc_trace(mVcdFile, tmp_40_i_cast_fu_722_p1, "tmp_40_i_cast_fu_722_p1");
    sc_trace(mVcdFile, abs5_fu_784_p3, "abs5_fu_784_p3");
    sc_trace(mVcdFile, abs_cast4_fu_781_p1, "abs_cast4_fu_781_p1");
    sc_trace(mVcdFile, abs5_cast3_fu_789_p1, "abs5_cast3_fu_789_p1");
    sc_trace(mVcdFile, p_fu_797_p2, "p_fu_797_p2");
    sc_trace(mVcdFile, tmp_14_fu_803_p4, "tmp_14_fu_803_p4");
    sc_trace(mVcdFile, tmp_13_fu_819_p3, "tmp_13_fu_819_p3");
    sc_trace(mVcdFile, tmp_14_cast_fu_827_p1, "tmp_14_cast_fu_827_p1");
    sc_trace(mVcdFile, output4_sum7_fu_831_p2, "output4_sum7_fu_831_p2");
    sc_trace(mVcdFile, tmp_12_fu_793_p1, "tmp_12_fu_793_p1");
    sc_trace(mVcdFile, tmp_16_fu_851_p3, "tmp_16_fu_851_p3");
    sc_trace(mVcdFile, tmp_17_cast_fu_859_p1, "tmp_17_cast_fu_859_p1");
    sc_trace(mVcdFile, output4_sum_fu_863_p2, "output4_sum_fu_863_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp3_stage2_flag00011011, "ap_block_pp3_stage2_flag00011011");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
    sc_trace(mVcdFile, ap_idle_pp3, "ap_idle_pp3");
    sc_trace(mVcdFile, ap_enable_pp3, "ap_enable_pp3");
    sc_trace(mVcdFile, ap_condition_1437, "ap_condition_1437");
    sc_trace(mVcdFile, ap_condition_1440, "ap_condition_1440");
    sc_trace(mVcdFile, ap_condition_502, "ap_condition_502");
    sc_trace(mVcdFile, ap_condition_508, "ap_condition_508");
#endif

    }
    mHdltvinHandle.open("sobel_sw_new.hdltvin.dat");
    mHdltvoutHandle.open("sobel_sw_new.hdltvout.dat");
}

sobel_sw_new::~sobel_sw_new() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete sobel_sw_new_CTRL_BUS_s_axi_U;
    delete sobel_sw_new_INPUT_r_m_axi_U;
    delete sobel_sw_new_OUTPUT_r_m_axi_U;
    delete small_input_U;
}

void sobel_sw_new::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void sobel_sw_new::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_logic_0;
}

void sobel_sw_new::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv32_0;
}

void sobel_sw_new::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv32_1;
}

void sobel_sw_new::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void sobel_sw_new::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv1_1;
}

void sobel_sw_new::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv3_0;
}

void sobel_sw_new::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv2_0;
}

void sobel_sw_new::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv4_0;
}

void sobel_sw_new::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv8_0;
}

void sobel_sw_new::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state9.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state14.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_410_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_416_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state14.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state14.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_410_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_416_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state24.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state24.read())) {
                ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state24.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter2 = ap_enable_reg_pp2_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
            ap_enable_reg_pp2_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp3_exit_iter0_state28.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00011011.read(), ap_const_boolean_0))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp3_exit_iter0_state28.read())) {
                ap_enable_reg_pp3_iter1 = (ap_condition_pp3_exit_iter0_state28.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp3_iter1 = ap_enable_reg_pp3_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp3_iter2 = ap_enable_reg_pp3_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter3 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00011011.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00011011.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp3_iter3 = ap_enable_reg_pp3_iter2.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
            ap_enable_reg_pp3_iter3 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_INPUT_r_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_INPUT_r_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_INPUT_r_ARREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_INPUT_r_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, INPUT_r_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, INPUT_r_ARREADY.read())))) {
            ap_reg_ioackin_INPUT_r_ARREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_OUTPUT_r_AWREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1087.read()) && 
              esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00011001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
              esl_seteq<1,1,1>(icmp_reg_1087.read(), ap_const_lv1_1) && 
              esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00011001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_OUTPUT_r_AWREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1087.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, OUTPUT_r_AWREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00001001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
                     esl_seteq<1,1,1>(icmp_reg_1087.read(), ap_const_lv1_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, OUTPUT_r_AWREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00001001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_OUTPUT_r_AWREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_OUTPUT_r_WREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1087.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
              esl_seteq<1,1,1>(icmp_reg_1087.read(), ap_const_lv1_1) && 
              esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_OUTPUT_r_WREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1087.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, OUTPUT_r_WREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00001001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
                     esl_seteq<1,1,1>(icmp_reg_1087.read(), ap_const_lv1_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, OUTPUT_r_WREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00001001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_OUTPUT_r_WREADY = ap_const_logic_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_reg_311 = ap_const_lv9_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        i_reg_311 = i_1_fu_878_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_475_p2.read()))) {
        indvar1_reg_335 = indvar_next1_fu_481_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        indvar1_reg_335 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond6_reg_912.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        indvar_reg_299 = indvar_next_reg_916.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        indvar_reg_299 = ap_const_lv12_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_410_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_416_p2.read()))) {
        k_reg_323 = ap_const_lv12_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_936.read()))) {
        k_reg_323 = k_1_reg_940.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_932.read()))) {
        position_fu_166 = position_1_fu_499_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        position_fu_166 = ap_const_lv32_3;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_970.read()))) {
        posx_assign_reg_346 = j_reg_979.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        posx_assign_reg_346 = ap_const_lv10_1;
    }
    if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_970.read())) {
        if (esl_seteq<1,1,1>(ap_condition_508.read(), ap_const_boolean_1)) {
            reg_367 = small_input_q1.read();
        } else if (esl_seteq<1,1,1>(ap_condition_502.read(), ap_const_boolean_1)) {
            reg_367 = small_input_q0.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        INPUT_addr_1_reg_950 =  (sc_lv<32>) (input2_sum5_cast_fu_465_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage2_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_813_p2.read()))) {
        OUTPUT_addr_1_reg_1101 =  (sc_lv<32>) (output4_sum_cast_fu_868_p1.read());
        tmp_15_reg_1096 = tmp_15_fu_846_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage2_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_813_p2.read()))) {
        OUTPUT_addr_reg_1091 =  (sc_lv<32>) (output4_sum7_cast_fu_836_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp3_iter1_exitcond_reg_970.read()))) {
        abs_reg_1062 = abs_fu_735_p3.read();
        abscond4_reg_1077 = abscond4_fu_771_p2.read();
        neg3_reg_1072 = neg3_fu_765_p2.read();
        res_1_reg_1067 = res_1_fu_759_p2.read();
        tmp_11_reg_1082 = tmp_11_fu_777_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond6_reg_912 = exitcond6_reg_912.read();
        ap_reg_pp0_iter1_indvar_reg_299 = indvar_reg_299.read();
        exitcond6_reg_912 = exitcond6_fu_388_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp2_iter1_exitcond3_reg_956 = exitcond3_reg_956.read();
        ap_reg_pp2_iter1_tmp_9_reg_965 = tmp_9_reg_965.read();
        exitcond3_reg_956 = exitcond3_fu_475_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp3_iter1_exitcond_reg_970 = exitcond_reg_970.read();
        ap_reg_pp3_iter1_posx_assign_reg_346 = posx_assign_reg_346.read();
        exitcond_reg_970 = exitcond_fu_510_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage2_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp3_iter2_icmp_reg_1087 = icmp_reg_1087.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0))) {
        exitcond1_reg_936 = exitcond1_fu_422_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage2_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp3_iter1_exitcond_reg_970.read()))) {
        icmp_reg_1087 = icmp_fu_813_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        indvar_next_reg_916 = indvar_next_fu_394_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        input_read_reg_889 = input_r_r.read();
        output_read_reg_884 = output_r_r.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_510_p2.read()))) {
        j_reg_979 = j_fu_520_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        k_1_reg_940 = k_1_fu_428_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_510_p2.read()))) {
        posx_assign_cast8_reg_974 = posx_assign_cast8_fu_516_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_970.read()))) {
        posx_assign_cast_reg_994 = posx_assign_cast_fu_542_p1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond6_reg_912.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_956.read()) && 
  esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0)))) {
        reg_361 = INPUT_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_970.read()))) {
        res_3_i_reg_1057 = res_3_i_fu_717_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_970.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage2_flag00011001.read(), ap_const_boolean_0))) {
        res_8_i_reg_1025 = res_8_i_fu_635_p2.read();
        tmp2_reg_1030 = tmp2_fu_641_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_970.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00011001.read(), ap_const_boolean_0))) {
        res_reg_1040 = res_fu_668_p2.read();
        tmp_50_i_cast_reg_1035 = tmp_50_i_cast_fu_659_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_970.read()))) {
        small_input_load_3_reg_1004 = small_input_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_410_p2.read()))) {
        tmp_1_reg_932 = tmp_1_fu_416_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_20_cast_reg_901 = tmp_20_cast_fu_382_p1.read();
        tmp_21_cast_reg_907 = tmp_21_cast_fu_385_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_475_p2.read()))) {
        tmp_9_reg_965 = tmp_9_fu_487_p3.read();
    }
}

void sobel_sw_new::thread_INPUT_r_ARADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_r_ARREADY.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
            INPUT_r_ARADDR = INPUT_addr_1_reg_950.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            INPUT_r_ARADDR =  (sc_lv<32>) (tmp_2_fu_372_p1.read());
        } else {
            INPUT_r_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        INPUT_r_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void sobel_sw_new::thread_INPUT_r_ARLEN() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_r_ARREADY.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
            INPUT_r_ARLEN = ap_const_lv32_400;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            INPUT_r_ARLEN = ap_const_lv32_C00;
        } else {
            INPUT_r_ARLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        INPUT_r_ARLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void sobel_sw_new::thread_INPUT_r_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_r_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_r_ARREADY.read())))) {
        INPUT_r_ARVALID = ap_const_logic_1;
    } else {
        INPUT_r_ARVALID = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_INPUT_r_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(exitcond6_reg_912.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_956.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0)))) {
        INPUT_r_RREADY = ap_const_logic_1;
    } else {
        INPUT_r_RREADY = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_INPUT_r_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        INPUT_r_blk_n_AR = m_axi_INPUT_r_ARREADY.read();
    } else {
        INPUT_r_blk_n_AR = ap_const_logic_1;
    }
}

void sobel_sw_new::thread_INPUT_r_blk_n_R() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond6_reg_912.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_956.read())))) {
        INPUT_r_blk_n_R = m_axi_INPUT_r_RVALID.read();
    } else {
        INPUT_r_blk_n_R = ap_const_logic_1;
    }
}

void sobel_sw_new::thread_OUTPUT_r_AWADDR() {
    if (esl_seteq<1,1,1>(ap_condition_1437.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(icmp_reg_1087.read(), ap_const_lv1_1)) {
            OUTPUT_r_AWADDR = OUTPUT_addr_1_reg_1101.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1087.read())) {
            OUTPUT_r_AWADDR = OUTPUT_addr_reg_1091.read();
        } else {
            OUTPUT_r_AWADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        OUTPUT_r_AWADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void sobel_sw_new::thread_OUTPUT_r_AWVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1087.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00001001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUTPUT_r_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(icmp_reg_1087.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00001001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUTPUT_r_AWREADY.read())))) {
        OUTPUT_r_AWVALID = ap_const_logic_1;
    } else {
        OUTPUT_r_AWVALID = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_OUTPUT_r_BREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp3_iter2_icmp_reg_1087.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
          esl_seteq<1,1,1>(ap_reg_pp3_iter2_icmp_reg_1087.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00011001.read(), ap_const_boolean_0)))) {
        OUTPUT_r_BREADY = ap_const_logic_1;
    } else {
        OUTPUT_r_BREADY = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_OUTPUT_r_WDATA() {
    if (esl_seteq<1,1,1>(ap_condition_1440.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(icmp_reg_1087.read(), ap_const_lv1_1)) {
            OUTPUT_r_WDATA = tmp_15_reg_1096.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1087.read())) {
            OUTPUT_r_WDATA = ap_const_lv8_FF;
        } else {
            OUTPUT_r_WDATA =  (sc_lv<8>) ("XXXXXXXX");
        }
    } else {
        OUTPUT_r_WDATA =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sobel_sw_new::thread_OUTPUT_r_WVALID() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1087.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00001001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUTPUT_r_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
          esl_seteq<1,1,1>(icmp_reg_1087.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00001001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUTPUT_r_WREADY.read())))) {
        OUTPUT_r_WVALID = ap_const_logic_1;
    } else {
        OUTPUT_r_WVALID = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_OUTPUT_r_blk_n_AW() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1087.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_reg_1087.read(), ap_const_lv1_1)))) {
        OUTPUT_r_blk_n_AW = m_axi_OUTPUT_r_AWREADY.read();
    } else {
        OUTPUT_r_blk_n_AW = ap_const_logic_1;
    }
}

void sobel_sw_new::thread_OUTPUT_r_blk_n_B() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp3_iter2_icmp_reg_1087.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_reg_pp3_iter2_icmp_reg_1087.read(), ap_const_lv1_1)))) {
        OUTPUT_r_blk_n_B = m_axi_OUTPUT_r_BVALID.read();
    } else {
        OUTPUT_r_blk_n_B = ap_const_logic_1;
    }
}

void sobel_sw_new::thread_OUTPUT_r_blk_n_W() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1087.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00000000.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00000000.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_reg_1087.read(), ap_const_lv1_1)))) {
        OUTPUT_r_blk_n_W = m_axi_OUTPUT_r_WREADY.read();
    } else {
        OUTPUT_r_blk_n_W = ap_const_logic_1;
    }
}

void sobel_sw_new::thread_abs5_cast3_fu_789_p1() {
    abs5_cast3_fu_789_p1 = esl_sext<12,11>(abs5_fu_784_p3.read());
}

void sobel_sw_new::thread_abs5_fu_784_p3() {
    abs5_fu_784_p3 = (!abscond4_reg_1077.read()[0].is_01())? sc_lv<11>(): ((abscond4_reg_1077.read()[0].to_bool())? res_1_reg_1067.read(): neg3_reg_1072.read());
}

void sobel_sw_new::thread_abs_cast4_fu_781_p1() {
    abs_cast4_fu_781_p1 = esl_sext<12,11>(abs_reg_1062.read());
}

void sobel_sw_new::thread_abs_fu_735_p3() {
    abs_fu_735_p3 = (!abscond_fu_730_p2.read()[0].is_01())? sc_lv<11>(): ((abscond_fu_730_p2.read()[0].to_bool())? res_reg_1040.read(): neg_fu_725_p2.read());
}

void sobel_sw_new::thread_abscond4_fu_771_p2() {
    abscond4_fu_771_p2 = (!res_1_fu_759_p2.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): (sc_bigint<11>(res_1_fu_759_p2.read()) > sc_bigint<11>(ap_const_lv11_0));
}

void sobel_sw_new::thread_abscond_fu_730_p2() {
    abscond_fu_730_p2 = (!res_reg_1040.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): (sc_bigint<11>(res_reg_1040.read()) > sc_bigint<11>(ap_const_lv11_0));
}

void sobel_sw_new::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[8];
}

void sobel_sw_new::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[11];
}

void sobel_sw_new::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[20];
}

void sobel_sw_new::thread_ap_CS_fsm_pp3_stage0() {
    ap_CS_fsm_pp3_stage0 = ap_CS_fsm.read()[22];
}

void sobel_sw_new::thread_ap_CS_fsm_pp3_stage1() {
    ap_CS_fsm_pp3_stage1 = ap_CS_fsm.read()[23];
}

void sobel_sw_new::thread_ap_CS_fsm_pp3_stage2() {
    ap_CS_fsm_pp3_stage2 = ap_CS_fsm.read()[24];
}

void sobel_sw_new::thread_ap_CS_fsm_pp3_stage3() {
    ap_CS_fsm_pp3_stage3 = ap_CS_fsm.read()[25];
}

void sobel_sw_new::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sobel_sw_new::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[9];
}

void sobel_sw_new::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[10];
}

void sobel_sw_new::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[12];
}

void sobel_sw_new::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[13];
}

void sobel_sw_new::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sobel_sw_new::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[19];
}

void sobel_sw_new::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[21];
}

void sobel_sw_new::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[26];
}

void sobel_sw_new::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sobel_sw_new::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond6_reg_912.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void sobel_sw_new::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond6_reg_912.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void sobel_sw_new::thread_ap_block_pp1_stage0_flag00000000() {
    ap_block_pp1_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_pp1_stage0_flag00011001() {
    ap_block_pp1_stage0_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_pp1_stage0_flag00011011() {
    ap_block_pp1_stage0_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_pp2_stage0_flag00000000() {
    ap_block_pp2_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_pp2_stage0_flag00011001() {
    ap_block_pp2_stage0_flag00011001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_956.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void sobel_sw_new::thread_ap_block_pp2_stage0_flag00011011() {
    ap_block_pp2_stage0_flag00011011 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_956.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void sobel_sw_new::thread_ap_block_pp3_stage0_flag00000000() {
    ap_block_pp3_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_pp3_stage0_flag00001001() {
    ap_block_pp3_stage0_flag00001001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_pp3_stage0_flag00011001() {
    ap_block_pp3_stage0_flag00011001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state36_io.read()));
}

void sobel_sw_new::thread_ap_block_pp3_stage0_flag00011011() {
    ap_block_pp3_stage0_flag00011011 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state36_io.read()));
}

void sobel_sw_new::thread_ap_block_pp3_stage1_flag00000000() {
    ap_block_pp3_stage1_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_pp3_stage1_flag00011001() {
    ap_block_pp3_stage1_flag00011001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp3_iter2_icmp_reg_1087.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, OUTPUT_r_BVALID.read())) || 
  (esl_seteq<1,1,1>(ap_reg_pp3_iter2_icmp_reg_1087.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, OUTPUT_r_BVALID.read()))));
}

void sobel_sw_new::thread_ap_block_pp3_stage1_flag00011011() {
    ap_block_pp3_stage1_flag00011011 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp3_iter2_icmp_reg_1087.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, OUTPUT_r_BVALID.read())) || 
  (esl_seteq<1,1,1>(ap_reg_pp3_iter2_icmp_reg_1087.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, OUTPUT_r_BVALID.read()))));
}

void sobel_sw_new::thread_ap_block_pp3_stage2_flag00000000() {
    ap_block_pp3_stage2_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_pp3_stage2_flag00011001() {
    ap_block_pp3_stage2_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_pp3_stage2_flag00011011() {
    ap_block_pp3_stage2_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_pp3_stage3_flag00000000() {
    ap_block_pp3_stage3_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_pp3_stage3_flag00001001() {
    ap_block_pp3_stage3_flag00001001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_pp3_stage3_flag00011001() {
    ap_block_pp3_stage3_flag00011001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state35_io.read()));
}

void sobel_sw_new::thread_ap_block_pp3_stage3_flag00011011() {
    ap_block_pp3_stage3_flag00011011 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state35_io.read()));
}

void sobel_sw_new::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = (esl_seteq<1,1,1>(exitcond6_reg_912.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void sobel_sw_new::thread_ap_block_state11_pp0_stage0_iter2() {
    ap_block_state11_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state14_pp1_stage0_iter0() {
    ap_block_state14_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state15_pp1_stage0_iter1() {
    ap_block_state15_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state24_pp2_stage0_iter0() {
    ap_block_state24_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state25_pp2_stage0_iter1() {
    ap_block_state25_pp2_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_956.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void sobel_sw_new::thread_ap_block_state26_pp2_stage0_iter2() {
    ap_block_state26_pp2_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state28_pp3_stage0_iter0() {
    ap_block_state28_pp3_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state29_pp3_stage1_iter0() {
    ap_block_state29_pp3_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state30_pp3_stage2_iter0() {
    ap_block_state30_pp3_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state31_pp3_stage3_iter0() {
    ap_block_state31_pp3_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state32_pp3_stage0_iter1() {
    ap_block_state32_pp3_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state33_pp3_stage1_iter1() {
    ap_block_state33_pp3_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state34_pp3_stage2_iter1() {
    ap_block_state34_pp3_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state35_io() {
    ap_block_state35_io = ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1087.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_OUTPUT_r_AWREADY.read())) || (esl_seteq<1,1,1>(icmp_reg_1087.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_OUTPUT_r_AWREADY.read())));
}

void sobel_sw_new::thread_ap_block_state35_pp3_stage3_iter1() {
    ap_block_state35_pp3_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state36_io() {
    ap_block_state36_io = ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_reg_1087.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_OUTPUT_r_WREADY.read())) || (esl_seteq<1,1,1>(icmp_reg_1087.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_OUTPUT_r_WREADY.read())));
}

void sobel_sw_new::thread_ap_block_state36_pp3_stage0_iter2() {
    ap_block_state36_pp3_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state37_pp3_stage1_iter2() {
    ap_block_state37_pp3_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state38_pp3_stage2_iter2() {
    ap_block_state38_pp3_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state39_pp3_stage3_iter2() {
    ap_block_state39_pp3_stage3_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state40_pp3_stage0_iter3() {
    ap_block_state40_pp3_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_block_state41_pp3_stage1_iter3() {
    ap_block_state41_pp3_stage1_iter3 = ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp3_iter2_icmp_reg_1087.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, OUTPUT_r_BVALID.read())) || (esl_seteq<1,1,1>(ap_reg_pp3_iter2_icmp_reg_1087.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, OUTPUT_r_BVALID.read())));
}

void sobel_sw_new::thread_ap_block_state9_pp0_stage0_iter0() {
    ap_block_state9_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_sw_new::thread_ap_condition_1437() {
    ap_condition_1437 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00001001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUTPUT_r_AWREADY.read()));
}

void sobel_sw_new::thread_ap_condition_1440() {
    ap_condition_1440 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00001001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUTPUT_r_WREADY.read()));
}

void sobel_sw_new::thread_ap_condition_502() {
    ap_condition_502 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00011001.read(), ap_const_boolean_0));
}

void sobel_sw_new::thread_ap_condition_508() {
    ap_condition_508 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011001.read(), ap_const_boolean_0));
}

void sobel_sw_new::thread_ap_condition_pp0_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_388_p2.read())) {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_ap_condition_pp1_exit_iter0_state14() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_422_p2.read())) {
        ap_condition_pp1_exit_iter0_state14 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state14 = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_ap_condition_pp2_exit_iter0_state24() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_475_p2.read())) {
        ap_condition_pp2_exit_iter0_state24 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state24 = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_ap_condition_pp3_exit_iter0_state28() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_510_p2.read())) {
        ap_condition_pp3_exit_iter0_state28 = ap_const_logic_1;
    } else {
        ap_condition_pp3_exit_iter0_state28 = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_410_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void sobel_sw_new::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void sobel_sw_new::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void sobel_sw_new::thread_ap_enable_pp3() {
    ap_enable_pp3 = (ap_idle_pp3.read() ^ ap_const_logic_1);
}

void sobel_sw_new::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter2.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_ap_idle_pp3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter3.read()))) {
        ap_idle_pp3 = ap_const_logic_1;
    } else {
        ap_idle_pp3 = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_410_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void sobel_sw_new::thread_ap_sig_ioackin_INPUT_r_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_INPUT_r_ARREADY.read())) {
        ap_sig_ioackin_INPUT_r_ARREADY = INPUT_r_ARREADY.read();
    } else {
        ap_sig_ioackin_INPUT_r_ARREADY = ap_const_logic_1;
    }
}

void sobel_sw_new::thread_ap_sig_ioackin_OUTPUT_r_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUTPUT_r_AWREADY.read())) {
        ap_sig_ioackin_OUTPUT_r_AWREADY = OUTPUT_r_AWREADY.read();
    } else {
        ap_sig_ioackin_OUTPUT_r_AWREADY = ap_const_logic_1;
    }
}

void sobel_sw_new::thread_ap_sig_ioackin_OUTPUT_r_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_OUTPUT_r_WREADY.read())) {
        ap_sig_ioackin_OUTPUT_r_WREADY = OUTPUT_r_WREADY.read();
    } else {
        ap_sig_ioackin_OUTPUT_r_WREADY = ap_const_logic_1;
    }
}

void sobel_sw_new::thread_exitcond1_fu_422_p2() {
    exitcond1_fu_422_p2 = (!k_phi_fu_327_p4.read().is_01() || !ap_const_lv12_800.is_01())? sc_lv<1>(): sc_lv<1>(k_phi_fu_327_p4.read() == ap_const_lv12_800);
}

void sobel_sw_new::thread_exitcond2_fu_410_p2() {
    exitcond2_fu_410_p2 = (!i_reg_311.read().is_01() || !ap_const_lv9_101.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_311.read() == ap_const_lv9_101);
}

void sobel_sw_new::thread_exitcond3_fu_475_p2() {
    exitcond3_fu_475_p2 = (!indvar1_reg_335.read().is_01() || !ap_const_lv11_400.is_01())? sc_lv<1>(): sc_lv<1>(indvar1_reg_335.read() == ap_const_lv11_400);
}

void sobel_sw_new::thread_exitcond6_fu_388_p2() {
    exitcond6_fu_388_p2 = (!indvar_phi_fu_303_p4.read().is_01() || !ap_const_lv12_C00.is_01())? sc_lv<1>(): sc_lv<1>(indvar_phi_fu_303_p4.read() == ap_const_lv12_C00);
}

void sobel_sw_new::thread_exitcond_fu_510_p2() {
    exitcond_fu_510_p2 = (!posx_assign_phi_fu_350_p4.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<1>(): sc_lv<1>(posx_assign_phi_fu_350_p4.read() == ap_const_lv10_3FF);
}

void sobel_sw_new::thread_i_1_fu_878_p2() {
    i_1_fu_878_p2 = (!i_reg_311.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_reg_311.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void sobel_sw_new::thread_icmp_fu_813_p2() {
    icmp_fu_813_p2 = (!tmp_14_fu_803_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_14_fu_803_p4.read() == ap_const_lv4_0);
}

void sobel_sw_new::thread_indvar_next1_fu_481_p2() {
    indvar_next1_fu_481_p2 = (!indvar1_reg_335.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(indvar1_reg_335.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void sobel_sw_new::thread_indvar_next_fu_394_p2() {
    indvar_next_fu_394_p2 = (!indvar_phi_fu_303_p4.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(indvar_phi_fu_303_p4.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void sobel_sw_new::thread_indvar_phi_fu_303_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond6_reg_912.read(), ap_const_lv1_0))) {
        indvar_phi_fu_303_p4 = indvar_next_reg_916.read();
    } else {
        indvar_phi_fu_303_p4 = indvar_reg_299.read();
    }
}

void sobel_sw_new::thread_input2_sum5_cast_fu_465_p1() {
    input2_sum5_cast_fu_465_p1 = esl_sext<64,33>(input2_sum5_fu_460_p2.read());
}

void sobel_sw_new::thread_input2_sum5_fu_460_p2() {
    input2_sum5_fu_460_p2 = (!tmp_21_cast_reg_907.read().is_01() || !tmp_3_cast_fu_456_p1.read().is_01())? sc_lv<33>(): (sc_bigint<33>(tmp_21_cast_reg_907.read()) + sc_bigint<33>(tmp_3_cast_fu_456_p1.read()));
}

void sobel_sw_new::thread_j_fu_520_p2() {
    j_fu_520_p2 = (!ap_const_lv10_1.is_01() || !posx_assign_phi_fu_350_p4.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(posx_assign_phi_fu_350_p4.read()));
}

void sobel_sw_new::thread_k_1_fu_428_p2() {
    k_1_fu_428_p2 = (!k_phi_fu_327_p4.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(k_phi_fu_327_p4.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void sobel_sw_new::thread_k_phi_fu_327_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_936.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00000000.read(), ap_const_boolean_0))) {
        k_phi_fu_327_p4 = k_1_reg_940.read();
    } else {
        k_phi_fu_327_p4 = k_reg_323.read();
    }
}

void sobel_sw_new::thread_neg3_fu_765_p2() {
    neg3_fu_765_p2 = (!ap_const_lv11_0.is_01() || !res_1_fu_759_p2.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_0) - sc_biguint<11>(res_1_fu_759_p2.read()));
}

void sobel_sw_new::thread_neg_fu_725_p2() {
    neg_fu_725_p2 = (!ap_const_lv11_0.is_01() || !res_reg_1040.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_0) - sc_biguint<11>(res_reg_1040.read()));
}

void sobel_sw_new::thread_output4_sum7_cast_fu_836_p1() {
    output4_sum7_cast_fu_836_p1 = esl_sext<64,33>(output4_sum7_fu_831_p2.read());
}

void sobel_sw_new::thread_output4_sum7_fu_831_p2() {
    output4_sum7_fu_831_p2 = (!tmp_14_cast_fu_827_p1.read().is_01() || !tmp_20_cast_reg_901.read().is_01())? sc_lv<33>(): (sc_biguint<33>(tmp_14_cast_fu_827_p1.read()) + sc_bigint<33>(tmp_20_cast_reg_901.read()));
}

void sobel_sw_new::thread_output4_sum_cast_fu_868_p1() {
    output4_sum_cast_fu_868_p1 = esl_sext<64,33>(output4_sum_fu_863_p2.read());
}

void sobel_sw_new::thread_output4_sum_fu_863_p2() {
    output4_sum_fu_863_p2 = (!tmp_17_cast_fu_859_p1.read().is_01() || !tmp_20_cast_reg_901.read().is_01())? sc_lv<33>(): (sc_biguint<33>(tmp_17_cast_fu_859_p1.read()) + sc_bigint<33>(tmp_20_cast_reg_901.read()));
}

void sobel_sw_new::thread_p_fu_797_p2() {
    p_fu_797_p2 = (!abs_cast4_fu_781_p1.read().is_01() || !abs5_cast3_fu_789_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(abs_cast4_fu_781_p1.read()) + sc_bigint<12>(abs5_cast3_fu_789_p1.read()));
}

void sobel_sw_new::thread_position_1_fu_499_p2() {
    position_1_fu_499_p2 = (!position_fu_166.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(position_fu_166.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sobel_sw_new::thread_posx_assign_cast8_fu_516_p1() {
    posx_assign_cast8_fu_516_p1 = esl_zext<12,10>(posx_assign_phi_fu_350_p4.read());
}

void sobel_sw_new::thread_posx_assign_cast_fu_542_p1() {
    posx_assign_cast_fu_542_p1 = esl_zext<11,10>(posx_assign_reg_346.read());
}

void sobel_sw_new::thread_posx_assign_phi_fu_350_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_970.read()))) {
        posx_assign_phi_fu_350_p4 = j_reg_979.read();
    } else {
        posx_assign_phi_fu_350_p4 = posx_assign_reg_346.read();
    }
}

void sobel_sw_new::thread_res_1_fu_759_p2() {
    res_1_fu_759_p2 = (!res_4_i_fu_754_p2.read().is_01() || !tmp_40_i_cast_fu_722_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(res_4_i_fu_754_p2.read()) - sc_biguint<11>(tmp_40_i_cast_fu_722_p1.read()));
}

void sobel_sw_new::thread_res_2_cast5_fu_587_p1() {
    res_2_cast5_fu_587_p1 = esl_zext<9,8>(small_input_q1.read());
}

void sobel_sw_new::thread_res_2_cast_fu_591_p1() {
    res_2_cast_fu_591_p1 = esl_zext<11,8>(small_input_q1.read());
}

void sobel_sw_new::thread_res_2_i_cast_fu_713_p1() {
    res_2_i_cast_fu_713_p1 = esl_zext<11,10>(res_2_i_fu_707_p2.read());
}

void sobel_sw_new::thread_res_2_i_fu_707_p2() {
    res_2_i_fu_707_p2 = (!tmp2_cast_fu_704_p1.read().is_01() || !tmp_20_i_cast_fu_700_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp2_cast_fu_704_p1.read()) + sc_biguint<10>(tmp_20_i_cast_fu_700_p1.read()));
}

void sobel_sw_new::thread_res_3_i_fu_717_p2() {
    res_3_i_fu_717_p2 = (!res_2_i_cast_fu_713_p1.read().is_01() || !tmp_50_i_cast_reg_1035.read().is_01())? sc_lv<11>(): (sc_biguint<11>(res_2_i_cast_fu_713_p1.read()) - sc_biguint<11>(tmp_50_i_cast_reg_1035.read()));
}

void sobel_sw_new::thread_res_4_i_fu_754_p2() {
    res_4_i_fu_754_p2 = (!res_3_i_reg_1057.read().is_01() || !tmp_30_i_cast_fu_750_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(res_3_i_reg_1057.read()) - sc_biguint<11>(tmp_30_i_cast_fu_750_p1.read()));
}

void sobel_sw_new::thread_res_7_i_cast_fu_631_p1() {
    res_7_i_cast_fu_631_p1 = esl_zext<11,10>(res_7_i_fu_625_p2.read());
}

void sobel_sw_new::thread_res_7_i_fu_625_p2() {
    res_7_i_fu_625_p2 = (!tmp1_cast_fu_621_p1.read().is_01() || !tmp_37_i_cast_fu_580_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp1_cast_fu_621_p1.read()) + sc_biguint<10>(tmp_37_i_cast_fu_580_p1.read()));
}

void sobel_sw_new::thread_res_8_i_fu_635_p2() {
    res_8_i_fu_635_p2 = (!res_7_i_cast_fu_631_p1.read().is_01() || !res_2_cast_fu_591_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(res_7_i_cast_fu_631_p1.read()) - sc_biguint<11>(res_2_cast_fu_591_p1.read()));
}

void sobel_sw_new::thread_res_9_i_fu_663_p2() {
    res_9_i_fu_663_p2 = (!res_8_i_reg_1025.read().is_01() || !tmp_47_i_cast_fu_655_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(res_8_i_reg_1025.read()) - sc_biguint<11>(tmp_47_i_cast_fu_655_p1.read()));
}

void sobel_sw_new::thread_res_cast_fu_568_p1() {
    res_cast_fu_568_p1 = esl_zext<9,8>(reg_367.read());
}

void sobel_sw_new::thread_res_fu_668_p2() {
    res_fu_668_p2 = (!res_9_i_fu_663_p2.read().is_01() || !tmp_50_i_cast_fu_659_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(res_9_i_fu_663_p2.read()) - sc_biguint<11>(tmp_50_i_cast_fu_659_p1.read()));
}

void sobel_sw_new::thread_small_input_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()))) {
        small_input_address0 =  (sc_lv<12>) (tmp_18_i_fu_674_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage2_flag00000000.read(), ap_const_boolean_0))) {
        small_input_address0 =  (sc_lv<12>) (tmp_45_i_fu_600_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00000000.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()))) {
        small_input_address0 =  (sc_lv<12>) (tmp_35_i_fu_552_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00000000.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()))) {
        small_input_address0 =  (sc_lv<12>) (tmp_i_fu_526_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00000000.read(), ap_const_boolean_0))) {
        small_input_address0 =  (sc_lv<12>) (tmp_5_fu_440_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        small_input_address0 =  (sc_lv<12>) (tmp_fu_400_p1.read());
    } else {
        small_input_address0 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void sobel_sw_new::thread_small_input_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()))) {
        small_input_address1 =  (sc_lv<12>) (tmp_28_i_fu_687_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage2_flag00000000.read(), ap_const_boolean_0))) {
        small_input_address1 =  (sc_lv<12>) (tmp_49_i_fu_610_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00000000.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()))) {
        small_input_address1 =  (sc_lv<12>) (tmp_42_i_fu_563_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00000000.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()))) {
        small_input_address1 =  (sc_lv<12>) (tmp_39_i_fu_537_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00000000.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()))) {
        small_input_address1 =  (sc_lv<12>) (tmp_7_fu_495_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00000000.read(), ap_const_boolean_0))) {
        small_input_address1 =  (sc_lv<12>) (tmp_6_fu_445_p1.read());
    } else {
        small_input_address1 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void sobel_sw_new::thread_small_input_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage2_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00011001.read(), ap_const_boolean_0)))) {
        small_input_ce0 = ap_const_logic_1;
    } else {
        small_input_ce0 = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_small_input_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage2_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00011001.read(), ap_const_boolean_0)))) {
        small_input_ce1 = ap_const_logic_1;
    } else {
        small_input_ce1 = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_small_input_d1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()))) {
        small_input_d1 = reg_361.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00000000.read(), ap_const_boolean_0))) {
        small_input_d1 = small_input_q0.read();
    } else {
        small_input_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sobel_sw_new::thread_small_input_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond6_reg_912.read()))) {
        small_input_we0 = ap_const_logic_1;
    } else {
        small_input_we0 = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_small_input_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_936.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp2_iter1_exitcond3_reg_956.read())))) {
        small_input_we1 = ap_const_logic_1;
    } else {
        small_input_we1 = ap_const_logic_0;
    }
}

void sobel_sw_new::thread_tmp1_cast_fu_621_p1() {
    tmp1_cast_fu_621_p1 = esl_zext<10,9>(tmp1_fu_615_p2.read());
}

void sobel_sw_new::thread_tmp1_fu_615_p2() {
    tmp1_fu_615_p2 = (!res_cast_fu_568_p1.read().is_01() || !tmp_40_i_cast6_fu_584_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(res_cast_fu_568_p1.read()) + sc_biguint<9>(tmp_40_i_cast6_fu_584_p1.read()));
}

void sobel_sw_new::thread_tmp2_cast_fu_704_p1() {
    tmp2_cast_fu_704_p1 = esl_zext<10,9>(tmp2_reg_1030.read());
}

void sobel_sw_new::thread_tmp2_fu_641_p2() {
    tmp2_fu_641_p2 = (!res_2_cast5_fu_587_p1.read().is_01() || !res_cast_fu_568_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(res_2_cast5_fu_587_p1.read()) + sc_biguint<9>(res_cast_fu_568_p1.read()));
}

void sobel_sw_new::thread_tmp_11_fu_777_p1() {
    tmp_11_fu_777_p1 = abs_fu_735_p3.read().range(8-1, 0);
}

void sobel_sw_new::thread_tmp_12_fu_793_p1() {
    tmp_12_fu_793_p1 = abs5_fu_784_p3.read().range(8-1, 0);
}

void sobel_sw_new::thread_tmp_13_fu_819_p3() {
    tmp_13_fu_819_p3 = esl_concat<9,10>(i_reg_311.read(), ap_reg_pp3_iter1_posx_assign_reg_346.read());
}

void sobel_sw_new::thread_tmp_14_cast_fu_827_p1() {
    tmp_14_cast_fu_827_p1 = esl_zext<33,19>(tmp_13_fu_819_p3.read());
}

void sobel_sw_new::thread_tmp_14_fu_803_p4() {
    tmp_14_fu_803_p4 = p_fu_797_p2.read().range(11, 8);
}

void sobel_sw_new::thread_tmp_15_fu_846_p2() {
    tmp_15_fu_846_p2 = (!tmp_12_fu_793_p1.read().is_01() || !tmp_11_reg_1082.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_12_fu_793_p1.read()) + sc_biguint<8>(tmp_11_reg_1082.read()));
}

void sobel_sw_new::thread_tmp_16_fu_851_p3() {
    tmp_16_fu_851_p3 = esl_concat<9,10>(i_reg_311.read(), ap_reg_pp3_iter1_posx_assign_reg_346.read());
}

void sobel_sw_new::thread_tmp_17_cast_fu_859_p1() {
    tmp_17_cast_fu_859_p1 = esl_zext<33,19>(tmp_16_fu_851_p3.read());
}

void sobel_sw_new::thread_tmp_18_i_fu_674_p1() {
    tmp_18_i_fu_674_p1 = esl_zext<64,10>(posx_assign_reg_346.read());
}

void sobel_sw_new::thread_tmp_1_fu_416_p2() {
    tmp_1_fu_416_p2 = (!i_reg_311.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_311.read() == ap_const_lv9_1);
}

void sobel_sw_new::thread_tmp_20_cast_fu_382_p1() {
    tmp_20_cast_fu_382_p1 = esl_sext<33,32>(output_read_reg_884.read());
}

void sobel_sw_new::thread_tmp_20_i_cast_fu_700_p1() {
    tmp_20_i_cast_fu_700_p1 = esl_zext<10,9>(tmp_20_i_fu_692_p3.read());
}

void sobel_sw_new::thread_tmp_20_i_fu_692_p3() {
    tmp_20_i_fu_692_p3 = esl_concat<8,1>(small_input_q0.read(), ap_const_lv1_0);
}

void sobel_sw_new::thread_tmp_21_cast_fu_385_p1() {
    tmp_21_cast_fu_385_p1 = esl_sext<33,32>(input_read_reg_889.read());
}

void sobel_sw_new::thread_tmp_27_i_fu_679_p3() {
    tmp_27_i_fu_679_p3 = esl_concat<2,10>(ap_const_lv2_2, posx_assign_reg_346.read());
}

void sobel_sw_new::thread_tmp_28_i_fu_687_p1() {
    tmp_28_i_fu_687_p1 = esl_zext<64,12>(tmp_27_i_fu_679_p3.read());
}

void sobel_sw_new::thread_tmp_2_fu_372_p1() {
    tmp_2_fu_372_p1 = esl_sext<64,32>(input_read_reg_889.read());
}

void sobel_sw_new::thread_tmp_30_i_cast_fu_750_p1() {
    tmp_30_i_cast_fu_750_p1 = esl_zext<11,9>(tmp_30_i_fu_742_p3.read());
}

void sobel_sw_new::thread_tmp_30_i_fu_742_p3() {
    tmp_30_i_fu_742_p3 = esl_concat<8,1>(reg_367.read(), ap_const_lv1_0);
}

void sobel_sw_new::thread_tmp_34_i_fu_546_p2() {
    tmp_34_i_fu_546_p2 = (!ap_const_lv11_401.is_01() || !posx_assign_cast_fu_542_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(ap_const_lv11_401) + sc_biguint<11>(posx_assign_cast_fu_542_p1.read()));
}

void sobel_sw_new::thread_tmp_35_i_fu_552_p1() {
    tmp_35_i_fu_552_p1 = esl_zext<64,11>(tmp_34_i_fu_546_p2.read());
}

void sobel_sw_new::thread_tmp_37_i_cast_fu_580_p1() {
    tmp_37_i_cast_fu_580_p1 = esl_zext<10,9>(tmp_37_i_fu_572_p3.read());
}

void sobel_sw_new::thread_tmp_37_i_fu_572_p3() {
    tmp_37_i_fu_572_p3 = esl_concat<8,1>(small_input_q0.read(), ap_const_lv1_0);
}

void sobel_sw_new::thread_tmp_38_i_fu_531_p2() {
    tmp_38_i_fu_531_p2 = (!ap_const_lv12_801.is_01() || !posx_assign_cast8_fu_516_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_801) + sc_biguint<12>(posx_assign_cast8_fu_516_p1.read()));
}

void sobel_sw_new::thread_tmp_39_i_fu_537_p1() {
    tmp_39_i_fu_537_p1 = esl_zext<64,12>(tmp_38_i_fu_531_p2.read());
}

void sobel_sw_new::thread_tmp_3_cast_fu_456_p1() {
    tmp_3_cast_fu_456_p1 = esl_sext<33,32>(tmp_3_fu_450_p2.read());
}

void sobel_sw_new::thread_tmp_3_fu_450_p2() {
    tmp_3_fu_450_p2 = (!ap_const_lv32_A.is_01())? sc_lv<32>(): position_fu_166.read() << (unsigned short)ap_const_lv32_A.to_uint();
}

void sobel_sw_new::thread_tmp_40_i_cast6_fu_584_p1() {
    tmp_40_i_cast6_fu_584_p1 = esl_zext<9,8>(small_input_load_3_reg_1004.read());
}

void sobel_sw_new::thread_tmp_40_i_cast_fu_722_p1() {
    tmp_40_i_cast_fu_722_p1 = esl_zext<11,8>(small_input_load_3_reg_1004.read());
}

void sobel_sw_new::thread_tmp_41_i_fu_557_p2() {
    tmp_41_i_fu_557_p2 = (!ap_const_lv10_3FF.is_01() || !posx_assign_reg_346.read().is_01())? sc_lv<10>(): (sc_bigint<10>(ap_const_lv10_3FF) + sc_biguint<10>(posx_assign_reg_346.read()));
}

void sobel_sw_new::thread_tmp_42_i_fu_563_p1() {
    tmp_42_i_fu_563_p1 = esl_zext<64,10>(tmp_41_i_fu_557_p2.read());
}

void sobel_sw_new::thread_tmp_44_i_fu_595_p2() {
    tmp_44_i_fu_595_p2 = (!ap_const_lv11_3FF.is_01() || !posx_assign_cast_reg_994.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) + sc_biguint<11>(posx_assign_cast_reg_994.read()));
}

void sobel_sw_new::thread_tmp_45_i_fu_600_p1() {
    tmp_45_i_fu_600_p1 = esl_zext<64,11>(tmp_44_i_fu_595_p2.read());
}

void sobel_sw_new::thread_tmp_47_i_cast_fu_655_p1() {
    tmp_47_i_cast_fu_655_p1 = esl_zext<11,9>(tmp_47_i_fu_647_p3.read());
}

void sobel_sw_new::thread_tmp_47_i_fu_647_p3() {
    tmp_47_i_fu_647_p3 = esl_concat<8,1>(small_input_q0.read(), ap_const_lv1_0);
}

void sobel_sw_new::thread_tmp_48_i_fu_605_p2() {
    tmp_48_i_fu_605_p2 = (!ap_const_lv12_7FF.is_01() || !posx_assign_cast8_reg_974.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_7FF) + sc_biguint<12>(posx_assign_cast8_reg_974.read()));
}

void sobel_sw_new::thread_tmp_49_i_fu_610_p1() {
    tmp_49_i_fu_610_p1 = esl_zext<64,12>(tmp_48_i_fu_605_p2.read());
}

void sobel_sw_new::thread_tmp_4_fu_434_p2() {
    tmp_4_fu_434_p2 = (!k_phi_fu_327_p4.read().is_01() || !ap_const_lv12_400.is_01())? sc_lv<12>(): (sc_biguint<12>(k_phi_fu_327_p4.read()) + sc_biguint<12>(ap_const_lv12_400));
}

void sobel_sw_new::thread_tmp_50_i_cast_fu_659_p1() {
    tmp_50_i_cast_fu_659_p1 = esl_zext<11,8>(small_input_q1.read());
}

void sobel_sw_new::thread_tmp_5_fu_440_p1() {
    tmp_5_fu_440_p1 = esl_zext<64,12>(tmp_4_fu_434_p2.read());
}

void sobel_sw_new::thread_tmp_6_fu_445_p1() {
    tmp_6_fu_445_p1 = esl_zext<64,12>(k_reg_323.read());
}

void sobel_sw_new::thread_tmp_7_fu_495_p1() {
    tmp_7_fu_495_p1 = esl_zext<64,12>(ap_reg_pp2_iter1_tmp_9_reg_965.read());
}

void sobel_sw_new::thread_tmp_9_fu_487_p3() {
    tmp_9_fu_487_p3 = esl_concat<1,11>(ap_const_lv1_1, indvar1_reg_335.read());
}

void sobel_sw_new::thread_tmp_fu_400_p1() {
    tmp_fu_400_p1 = esl_zext<64,12>(ap_reg_pp0_iter1_indvar_reg_299.read());
}

void sobel_sw_new::thread_tmp_i_fu_526_p1() {
    tmp_i_fu_526_p1 = esl_zext<64,10>(j_fu_520_p2.read());
}

void sobel_sw_new::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_INPUT_r_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 256 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_388_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_388_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_410_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_410_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_416_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        case 2048 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_422_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_422_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_INPUT_r_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 1048576 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_475_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp2_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_475_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_510_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_510_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state42;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            }
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter2.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage1_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter2.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state42;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            }
            break;
        case 16777216 : 
            if (esl_seteq<1,1,1>(ap_block_pp3_stage2_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            }
            break;
        case 33554432 : 
            if (esl_seteq<1,1,1>(ap_block_pp3_stage3_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            }
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<27>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void sobel_sw_new::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_INPUT_r_AWVALID\" :  \"" << m_axi_INPUT_r_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_AWREADY\" :  \"" << m_axi_INPUT_r_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWADDR\" :  \"" << m_axi_INPUT_r_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWID\" :  \"" << m_axi_INPUT_r_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWLEN\" :  \"" << m_axi_INPUT_r_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWSIZE\" :  \"" << m_axi_INPUT_r_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWBURST\" :  \"" << m_axi_INPUT_r_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWLOCK\" :  \"" << m_axi_INPUT_r_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWCACHE\" :  \"" << m_axi_INPUT_r_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWPROT\" :  \"" << m_axi_INPUT_r_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWQOS\" :  \"" << m_axi_INPUT_r_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWREGION\" :  \"" << m_axi_INPUT_r_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWUSER\" :  \"" << m_axi_INPUT_r_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_WVALID\" :  \"" << m_axi_INPUT_r_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_WREADY\" :  \"" << m_axi_INPUT_r_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_WDATA\" :  \"" << m_axi_INPUT_r_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_WSTRB\" :  \"" << m_axi_INPUT_r_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_WLAST\" :  \"" << m_axi_INPUT_r_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_WID\" :  \"" << m_axi_INPUT_r_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_WUSER\" :  \"" << m_axi_INPUT_r_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARVALID\" :  \"" << m_axi_INPUT_r_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_ARREADY\" :  \"" << m_axi_INPUT_r_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARADDR\" :  \"" << m_axi_INPUT_r_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARID\" :  \"" << m_axi_INPUT_r_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARLEN\" :  \"" << m_axi_INPUT_r_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARSIZE\" :  \"" << m_axi_INPUT_r_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARBURST\" :  \"" << m_axi_INPUT_r_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARLOCK\" :  \"" << m_axi_INPUT_r_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARCACHE\" :  \"" << m_axi_INPUT_r_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARPROT\" :  \"" << m_axi_INPUT_r_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARQOS\" :  \"" << m_axi_INPUT_r_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARREGION\" :  \"" << m_axi_INPUT_r_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARUSER\" :  \"" << m_axi_INPUT_r_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_RVALID\" :  \"" << m_axi_INPUT_r_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_RREADY\" :  \"" << m_axi_INPUT_r_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_RDATA\" :  \"" << m_axi_INPUT_r_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_RLAST\" :  \"" << m_axi_INPUT_r_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_RID\" :  \"" << m_axi_INPUT_r_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_RUSER\" :  \"" << m_axi_INPUT_r_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_RRESP\" :  \"" << m_axi_INPUT_r_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_BVALID\" :  \"" << m_axi_INPUT_r_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_BREADY\" :  \"" << m_axi_INPUT_r_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_BRESP\" :  \"" << m_axi_INPUT_r_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_BID\" :  \"" << m_axi_INPUT_r_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_BUSER\" :  \"" << m_axi_INPUT_r_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWVALID\" :  \"" << m_axi_OUTPUT_r_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_AWREADY\" :  \"" << m_axi_OUTPUT_r_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWADDR\" :  \"" << m_axi_OUTPUT_r_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWID\" :  \"" << m_axi_OUTPUT_r_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWLEN\" :  \"" << m_axi_OUTPUT_r_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWSIZE\" :  \"" << m_axi_OUTPUT_r_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWBURST\" :  \"" << m_axi_OUTPUT_r_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWLOCK\" :  \"" << m_axi_OUTPUT_r_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWCACHE\" :  \"" << m_axi_OUTPUT_r_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWPROT\" :  \"" << m_axi_OUTPUT_r_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWQOS\" :  \"" << m_axi_OUTPUT_r_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWREGION\" :  \"" << m_axi_OUTPUT_r_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWUSER\" :  \"" << m_axi_OUTPUT_r_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_WVALID\" :  \"" << m_axi_OUTPUT_r_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_WREADY\" :  \"" << m_axi_OUTPUT_r_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_WDATA\" :  \"" << m_axi_OUTPUT_r_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_WSTRB\" :  \"" << m_axi_OUTPUT_r_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_WLAST\" :  \"" << m_axi_OUTPUT_r_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_WID\" :  \"" << m_axi_OUTPUT_r_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_WUSER\" :  \"" << m_axi_OUTPUT_r_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARVALID\" :  \"" << m_axi_OUTPUT_r_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_ARREADY\" :  \"" << m_axi_OUTPUT_r_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARADDR\" :  \"" << m_axi_OUTPUT_r_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARID\" :  \"" << m_axi_OUTPUT_r_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARLEN\" :  \"" << m_axi_OUTPUT_r_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARSIZE\" :  \"" << m_axi_OUTPUT_r_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARBURST\" :  \"" << m_axi_OUTPUT_r_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARLOCK\" :  \"" << m_axi_OUTPUT_r_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARCACHE\" :  \"" << m_axi_OUTPUT_r_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARPROT\" :  \"" << m_axi_OUTPUT_r_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARQOS\" :  \"" << m_axi_OUTPUT_r_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARREGION\" :  \"" << m_axi_OUTPUT_r_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARUSER\" :  \"" << m_axi_OUTPUT_r_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_RVALID\" :  \"" << m_axi_OUTPUT_r_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_RREADY\" :  \"" << m_axi_OUTPUT_r_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_RDATA\" :  \"" << m_axi_OUTPUT_r_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_RLAST\" :  \"" << m_axi_OUTPUT_r_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_RID\" :  \"" << m_axi_OUTPUT_r_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_RUSER\" :  \"" << m_axi_OUTPUT_r_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_RRESP\" :  \"" << m_axi_OUTPUT_r_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_BVALID\" :  \"" << m_axi_OUTPUT_r_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_BREADY\" :  \"" << m_axi_OUTPUT_r_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_BRESP\" :  \"" << m_axi_OUTPUT_r_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_BID\" :  \"" << m_axi_OUTPUT_r_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_BUSER\" :  \"" << m_axi_OUTPUT_r_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWVALID\" :  \"" << s_axi_CTRL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_AWREADY\" :  \"" << s_axi_CTRL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWADDR\" :  \"" << s_axi_CTRL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WVALID\" :  \"" << s_axi_CTRL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_WREADY\" :  \"" << s_axi_CTRL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WDATA\" :  \"" << s_axi_CTRL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WSTRB\" :  \"" << s_axi_CTRL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARVALID\" :  \"" << s_axi_CTRL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_ARREADY\" :  \"" << s_axi_CTRL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARADDR\" :  \"" << s_axi_CTRL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RVALID\" :  \"" << s_axi_CTRL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_RREADY\" :  \"" << s_axi_CTRL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RDATA\" :  \"" << s_axi_CTRL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RRESP\" :  \"" << s_axi_CTRL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BVALID\" :  \"" << s_axi_CTRL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_BREADY\" :  \"" << s_axi_CTRL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BRESP\" :  \"" << s_axi_CTRL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

