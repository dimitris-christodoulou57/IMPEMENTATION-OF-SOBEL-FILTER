// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sobel_sw_new_HH_
#define _sobel_sw_new_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sobel_sw_new_smalbkb.h"
#include "sobel_sw_new_CTRL_BUS_s_axi.h"
#include "sobel_sw_new_INPUT_r_m_axi.h"
#include "sobel_sw_new_OUTPUT_r_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_INPUT_R_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_INPUT_R_ID_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_R_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_R_DATA_WIDTH = 32,
         unsigned int C_M_AXI_INPUT_R_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_R_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_R_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_R_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_R_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_OUTPUT_R_ID_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_R_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_R_DATA_WIDTH = 32,
         unsigned int C_M_AXI_OUTPUT_R_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_R_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_R_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_R_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CTRL_BUS_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CTRL_BUS_DATA_WIDTH = 32>
struct sobel_sw_new : public sc_module {
    // Port declarations 110
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_INPUT_r_AWVALID;
    sc_in< sc_logic > m_axi_INPUT_r_AWREADY;
    sc_out< sc_uint<C_M_AXI_INPUT_R_ADDR_WIDTH> > m_axi_INPUT_r_AWADDR;
    sc_out< sc_uint<C_M_AXI_INPUT_R_ID_WIDTH> > m_axi_INPUT_r_AWID;
    sc_out< sc_lv<8> > m_axi_INPUT_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_INPUT_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_INPUT_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_INPUT_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_INPUT_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_INPUT_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_INPUT_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_INPUT_r_AWREGION;
    sc_out< sc_uint<C_M_AXI_INPUT_R_AWUSER_WIDTH> > m_axi_INPUT_r_AWUSER;
    sc_out< sc_logic > m_axi_INPUT_r_WVALID;
    sc_in< sc_logic > m_axi_INPUT_r_WREADY;
    sc_out< sc_uint<C_M_AXI_INPUT_R_DATA_WIDTH> > m_axi_INPUT_r_WDATA;
    sc_out< sc_uint<C_M_AXI_INPUT_R_DATA_WIDTH/8> > m_axi_INPUT_r_WSTRB;
    sc_out< sc_logic > m_axi_INPUT_r_WLAST;
    sc_out< sc_uint<C_M_AXI_INPUT_R_ID_WIDTH> > m_axi_INPUT_r_WID;
    sc_out< sc_uint<C_M_AXI_INPUT_R_WUSER_WIDTH> > m_axi_INPUT_r_WUSER;
    sc_out< sc_logic > m_axi_INPUT_r_ARVALID;
    sc_in< sc_logic > m_axi_INPUT_r_ARREADY;
    sc_out< sc_uint<C_M_AXI_INPUT_R_ADDR_WIDTH> > m_axi_INPUT_r_ARADDR;
    sc_out< sc_uint<C_M_AXI_INPUT_R_ID_WIDTH> > m_axi_INPUT_r_ARID;
    sc_out< sc_lv<8> > m_axi_INPUT_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_INPUT_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_INPUT_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_INPUT_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_INPUT_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_INPUT_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_INPUT_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_INPUT_r_ARREGION;
    sc_out< sc_uint<C_M_AXI_INPUT_R_ARUSER_WIDTH> > m_axi_INPUT_r_ARUSER;
    sc_in< sc_logic > m_axi_INPUT_r_RVALID;
    sc_out< sc_logic > m_axi_INPUT_r_RREADY;
    sc_in< sc_uint<C_M_AXI_INPUT_R_DATA_WIDTH> > m_axi_INPUT_r_RDATA;
    sc_in< sc_logic > m_axi_INPUT_r_RLAST;
    sc_in< sc_uint<C_M_AXI_INPUT_R_ID_WIDTH> > m_axi_INPUT_r_RID;
    sc_in< sc_uint<C_M_AXI_INPUT_R_RUSER_WIDTH> > m_axi_INPUT_r_RUSER;
    sc_in< sc_lv<2> > m_axi_INPUT_r_RRESP;
    sc_in< sc_logic > m_axi_INPUT_r_BVALID;
    sc_out< sc_logic > m_axi_INPUT_r_BREADY;
    sc_in< sc_lv<2> > m_axi_INPUT_r_BRESP;
    sc_in< sc_uint<C_M_AXI_INPUT_R_ID_WIDTH> > m_axi_INPUT_r_BID;
    sc_in< sc_uint<C_M_AXI_INPUT_R_BUSER_WIDTH> > m_axi_INPUT_r_BUSER;
    sc_out< sc_logic > m_axi_OUTPUT_r_AWVALID;
    sc_in< sc_logic > m_axi_OUTPUT_r_AWREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_ADDR_WIDTH> > m_axi_OUTPUT_r_AWADDR;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_ID_WIDTH> > m_axi_OUTPUT_r_AWID;
    sc_out< sc_lv<8> > m_axi_OUTPUT_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_OUTPUT_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_OUTPUT_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_OUTPUT_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_OUTPUT_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_OUTPUT_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_OUTPUT_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_OUTPUT_r_AWREGION;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_AWUSER_WIDTH> > m_axi_OUTPUT_r_AWUSER;
    sc_out< sc_logic > m_axi_OUTPUT_r_WVALID;
    sc_in< sc_logic > m_axi_OUTPUT_r_WREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_DATA_WIDTH> > m_axi_OUTPUT_r_WDATA;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_DATA_WIDTH/8> > m_axi_OUTPUT_r_WSTRB;
    sc_out< sc_logic > m_axi_OUTPUT_r_WLAST;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_ID_WIDTH> > m_axi_OUTPUT_r_WID;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_WUSER_WIDTH> > m_axi_OUTPUT_r_WUSER;
    sc_out< sc_logic > m_axi_OUTPUT_r_ARVALID;
    sc_in< sc_logic > m_axi_OUTPUT_r_ARREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_ADDR_WIDTH> > m_axi_OUTPUT_r_ARADDR;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_ID_WIDTH> > m_axi_OUTPUT_r_ARID;
    sc_out< sc_lv<8> > m_axi_OUTPUT_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_OUTPUT_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_OUTPUT_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_OUTPUT_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_OUTPUT_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_OUTPUT_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_OUTPUT_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_OUTPUT_r_ARREGION;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_ARUSER_WIDTH> > m_axi_OUTPUT_r_ARUSER;
    sc_in< sc_logic > m_axi_OUTPUT_r_RVALID;
    sc_out< sc_logic > m_axi_OUTPUT_r_RREADY;
    sc_in< sc_uint<C_M_AXI_OUTPUT_R_DATA_WIDTH> > m_axi_OUTPUT_r_RDATA;
    sc_in< sc_logic > m_axi_OUTPUT_r_RLAST;
    sc_in< sc_uint<C_M_AXI_OUTPUT_R_ID_WIDTH> > m_axi_OUTPUT_r_RID;
    sc_in< sc_uint<C_M_AXI_OUTPUT_R_RUSER_WIDTH> > m_axi_OUTPUT_r_RUSER;
    sc_in< sc_lv<2> > m_axi_OUTPUT_r_RRESP;
    sc_in< sc_logic > m_axi_OUTPUT_r_BVALID;
    sc_out< sc_logic > m_axi_OUTPUT_r_BREADY;
    sc_in< sc_lv<2> > m_axi_OUTPUT_r_BRESP;
    sc_in< sc_uint<C_M_AXI_OUTPUT_R_ID_WIDTH> > m_axi_OUTPUT_r_BID;
    sc_in< sc_uint<C_M_AXI_OUTPUT_R_BUSER_WIDTH> > m_axi_OUTPUT_r_BUSER;
    sc_in< sc_logic > s_axi_CTRL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH/8> > s_axi_CTRL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const5;
    sc_signal< sc_lv<32> > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const8;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<1> > ap_var_for_const9;
    sc_signal< sc_lv<3> > ap_var_for_const2;
    sc_signal< sc_lv<2> > ap_var_for_const3;
    sc_signal< sc_lv<4> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const7;


    // Module declarations
    sobel_sw_new(sc_module_name name);
    SC_HAS_PROCESS(sobel_sw_new);

    ~sobel_sw_new();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sobel_sw_new_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>* sobel_sw_new_CTRL_BUS_s_axi_U;
    sobel_sw_new_INPUT_r_m_axi<8,32,5,16,16,16,16,C_M_AXI_INPUT_R_ID_WIDTH,C_M_AXI_INPUT_R_ADDR_WIDTH,C_M_AXI_INPUT_R_DATA_WIDTH,C_M_AXI_INPUT_R_AWUSER_WIDTH,C_M_AXI_INPUT_R_ARUSER_WIDTH,C_M_AXI_INPUT_R_WUSER_WIDTH,C_M_AXI_INPUT_R_RUSER_WIDTH,C_M_AXI_INPUT_R_BUSER_WIDTH,C_M_AXI_INPUT_R_USER_VALUE,C_M_AXI_INPUT_R_PROT_VALUE,C_M_AXI_INPUT_R_CACHE_VALUE>* sobel_sw_new_INPUT_r_m_axi_U;
    sobel_sw_new_OUTPUT_r_m_axi<8,32,5,16,16,16,16,C_M_AXI_OUTPUT_R_ID_WIDTH,C_M_AXI_OUTPUT_R_ADDR_WIDTH,C_M_AXI_OUTPUT_R_DATA_WIDTH,C_M_AXI_OUTPUT_R_AWUSER_WIDTH,C_M_AXI_OUTPUT_R_ARUSER_WIDTH,C_M_AXI_OUTPUT_R_WUSER_WIDTH,C_M_AXI_OUTPUT_R_RUSER_WIDTH,C_M_AXI_OUTPUT_R_BUSER_WIDTH,C_M_AXI_OUTPUT_R_USER_VALUE,C_M_AXI_OUTPUT_R_PROT_VALUE,C_M_AXI_OUTPUT_R_CACHE_VALUE>* sobel_sw_new_OUTPUT_r_m_axi_U;
    sobel_sw_new_smalbkb* small_input_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<27> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > input_r_r;
    sc_signal< sc_lv<32> > output_r_r;
    sc_signal< sc_logic > INPUT_r_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > INPUT_r_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_flag00000000;
    sc_signal< sc_lv<1> > exitcond6_reg_912;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< bool > ap_block_pp2_stage0_flag00000000;
    sc_signal< sc_lv<1> > exitcond3_reg_956;
    sc_signal< sc_logic > OUTPUT_r_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_pp3_stage3;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter1;
    sc_signal< bool > ap_block_pp3_stage3_flag00000000;
    sc_signal< sc_lv<1> > icmp_reg_1087;
    sc_signal< sc_logic > OUTPUT_r_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_pp3_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter2;
    sc_signal< bool > ap_block_pp3_stage0_flag00000000;
    sc_signal< sc_logic > OUTPUT_r_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_pp3_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter3;
    sc_signal< bool > ap_block_pp3_stage1_flag00000000;
    sc_signal< sc_lv<1> > ap_reg_pp3_iter2_icmp_reg_1087;
    sc_signal< sc_logic > INPUT_r_AWREADY;
    sc_signal< sc_logic > INPUT_r_WREADY;
    sc_signal< sc_logic > INPUT_r_ARVALID;
    sc_signal< sc_logic > INPUT_r_ARREADY;
    sc_signal< sc_lv<32> > INPUT_r_ARADDR;
    sc_signal< sc_lv<32> > INPUT_r_ARLEN;
    sc_signal< sc_logic > INPUT_r_RVALID;
    sc_signal< sc_logic > INPUT_r_RREADY;
    sc_signal< sc_lv<8> > INPUT_r_RDATA;
    sc_signal< sc_logic > INPUT_r_RLAST;
    sc_signal< sc_lv<1> > INPUT_r_RID;
    sc_signal< sc_lv<1> > INPUT_r_RUSER;
    sc_signal< sc_lv<2> > INPUT_r_RRESP;
    sc_signal< sc_logic > INPUT_r_BVALID;
    sc_signal< sc_lv<2> > INPUT_r_BRESP;
    sc_signal< sc_lv<1> > INPUT_r_BID;
    sc_signal< sc_lv<1> > INPUT_r_BUSER;
    sc_signal< sc_logic > OUTPUT_r_AWVALID;
    sc_signal< sc_logic > OUTPUT_r_AWREADY;
    sc_signal< sc_lv<32> > OUTPUT_r_AWADDR;
    sc_signal< sc_logic > OUTPUT_r_WVALID;
    sc_signal< sc_logic > OUTPUT_r_WREADY;
    sc_signal< sc_lv<8> > OUTPUT_r_WDATA;
    sc_signal< sc_logic > OUTPUT_r_ARREADY;
    sc_signal< sc_logic > OUTPUT_r_RVALID;
    sc_signal< sc_lv<8> > OUTPUT_r_RDATA;
    sc_signal< sc_logic > OUTPUT_r_RLAST;
    sc_signal< sc_lv<1> > OUTPUT_r_RID;
    sc_signal< sc_lv<1> > OUTPUT_r_RUSER;
    sc_signal< sc_lv<2> > OUTPUT_r_RRESP;
    sc_signal< sc_logic > OUTPUT_r_BVALID;
    sc_signal< sc_logic > OUTPUT_r_BREADY;
    sc_signal< sc_lv<2> > OUTPUT_r_BRESP;
    sc_signal< sc_lv<1> > OUTPUT_r_BID;
    sc_signal< sc_lv<1> > OUTPUT_r_BUSER;
    sc_signal< sc_lv<12> > indvar_reg_299;
    sc_signal< sc_lv<12> > ap_reg_pp0_iter1_indvar_reg_299;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_flag00011001;
    sc_signal< sc_lv<12> > k_reg_323;
    sc_signal< sc_lv<11> > indvar1_reg_335;
    sc_signal< sc_lv<10> > posx_assign_reg_346;
    sc_signal< sc_lv<10> > ap_reg_pp3_iter1_posx_assign_reg_346;
    sc_signal< bool > ap_block_state28_pp3_stage0_iter0;
    sc_signal< bool > ap_block_state32_pp3_stage0_iter1;
    sc_signal< bool > ap_block_state36_pp3_stage0_iter2;
    sc_signal< sc_logic > ap_sig_ioackin_OUTPUT_r_WREADY;
    sc_signal< bool > ap_block_state36_io;
    sc_signal< bool > ap_block_state40_pp3_stage0_iter3;
    sc_signal< bool > ap_block_pp3_stage0_flag00011001;
    sc_signal< sc_lv<8> > reg_361;
    sc_signal< bool > ap_block_state24_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state25_pp2_stage0_iter1;
    sc_signal< bool > ap_block_state26_pp2_stage0_iter2;
    sc_signal< bool > ap_block_pp2_stage0_flag00011001;
    sc_signal< sc_lv<8> > small_input_q0;
    sc_signal< sc_lv<8> > reg_367;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter0;
    sc_signal< bool > ap_block_state29_pp3_stage1_iter0;
    sc_signal< bool > ap_block_state33_pp3_stage1_iter1;
    sc_signal< bool > ap_block_state37_pp3_stage1_iter2;
    sc_signal< bool > ap_block_state41_pp3_stage1_iter3;
    sc_signal< bool > ap_block_pp3_stage1_flag00011001;
    sc_signal< sc_lv<1> > exitcond_reg_970;
    sc_signal< sc_lv<8> > small_input_q1;
    sc_signal< sc_lv<32> > output_read_reg_884;
    sc_signal< sc_lv<32> > input_read_reg_889;
    sc_signal< sc_logic > ap_sig_ioackin_INPUT_r_ARREADY;
    sc_signal< sc_lv<33> > tmp_20_cast_fu_382_p1;
    sc_signal< sc_lv<33> > tmp_20_cast_reg_901;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<33> > tmp_21_cast_fu_385_p1;
    sc_signal< sc_lv<33> > tmp_21_cast_reg_907;
    sc_signal< sc_lv<1> > exitcond6_fu_388_p2;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond6_reg_912;
    sc_signal< sc_lv<12> > indvar_next_fu_394_p2;
    sc_signal< sc_lv<12> > indvar_next_reg_916;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond2_fu_410_p2;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<1> > tmp_1_fu_416_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_932;
    sc_signal< sc_lv<1> > exitcond1_fu_422_p2;
    sc_signal< sc_lv<1> > exitcond1_reg_936;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state14_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state15_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_flag00011001;
    sc_signal< sc_lv<12> > k_1_fu_428_p2;
    sc_signal< sc_lv<12> > k_1_reg_940;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<32> > INPUT_addr_1_reg_950;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<1> > exitcond3_fu_475_p2;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter1_exitcond3_reg_956;
    sc_signal< sc_lv<11> > indvar_next1_fu_481_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<12> > tmp_9_fu_487_p3;
    sc_signal< sc_lv<12> > tmp_9_reg_965;
    sc_signal< sc_lv<12> > ap_reg_pp2_iter1_tmp_9_reg_965;
    sc_signal< sc_lv<1> > exitcond_fu_510_p2;
    sc_signal< sc_lv<1> > ap_reg_pp3_iter1_exitcond_reg_970;
    sc_signal< sc_lv<12> > posx_assign_cast8_fu_516_p1;
    sc_signal< sc_lv<12> > posx_assign_cast8_reg_974;
    sc_signal< sc_lv<10> > j_fu_520_p2;
    sc_signal< sc_lv<10> > j_reg_979;
    sc_signal< sc_lv<11> > posx_assign_cast_fu_542_p1;
    sc_signal< sc_lv<11> > posx_assign_cast_reg_994;
    sc_signal< sc_lv<8> > small_input_load_3_reg_1004;
    sc_signal< sc_logic > ap_CS_fsm_pp3_stage2;
    sc_signal< bool > ap_block_state30_pp3_stage2_iter0;
    sc_signal< bool > ap_block_state34_pp3_stage2_iter1;
    sc_signal< bool > ap_block_state38_pp3_stage2_iter2;
    sc_signal< bool > ap_block_pp3_stage2_flag00011001;
    sc_signal< sc_lv<11> > res_8_i_fu_635_p2;
    sc_signal< sc_lv<11> > res_8_i_reg_1025;
    sc_signal< sc_lv<9> > tmp2_fu_641_p2;
    sc_signal< sc_lv<9> > tmp2_reg_1030;
    sc_signal< sc_lv<11> > tmp_50_i_cast_fu_659_p1;
    sc_signal< sc_lv<11> > tmp_50_i_cast_reg_1035;
    sc_signal< bool > ap_block_state31_pp3_stage3_iter0;
    sc_signal< bool > ap_block_state35_pp3_stage3_iter1;
    sc_signal< sc_logic > ap_sig_ioackin_OUTPUT_r_AWREADY;
    sc_signal< bool > ap_block_state35_io;
    sc_signal< bool > ap_block_state39_pp3_stage3_iter2;
    sc_signal< bool > ap_block_pp3_stage3_flag00011001;
    sc_signal< sc_lv<11> > res_fu_668_p2;
    sc_signal< sc_lv<11> > res_reg_1040;
    sc_signal< sc_lv<11> > res_3_i_fu_717_p2;
    sc_signal< sc_lv<11> > res_3_i_reg_1057;
    sc_signal< sc_lv<11> > abs_fu_735_p3;
    sc_signal< sc_lv<11> > abs_reg_1062;
    sc_signal< sc_lv<11> > res_1_fu_759_p2;
    sc_signal< sc_lv<11> > res_1_reg_1067;
    sc_signal< sc_lv<11> > neg3_fu_765_p2;
    sc_signal< sc_lv<11> > neg3_reg_1072;
    sc_signal< sc_lv<1> > abscond4_fu_771_p2;
    sc_signal< sc_lv<1> > abscond4_reg_1077;
    sc_signal< sc_lv<8> > tmp_11_fu_777_p1;
    sc_signal< sc_lv<8> > tmp_11_reg_1082;
    sc_signal< sc_lv<1> > icmp_fu_813_p2;
    sc_signal< sc_lv<32> > OUTPUT_addr_reg_1091;
    sc_signal< sc_lv<8> > tmp_15_fu_846_p2;
    sc_signal< sc_lv<8> > tmp_15_reg_1096;
    sc_signal< sc_lv<32> > OUTPUT_addr_1_reg_1101;
    sc_signal< sc_lv<9> > i_1_fu_878_p2;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< bool > ap_block_pp0_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp1_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state14;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< bool > ap_block_pp2_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state24;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter2;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< bool > ap_block_pp3_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp3_exit_iter0_state28;
    sc_signal< bool > ap_block_pp3_stage3_flag00011011;
    sc_signal< bool > ap_block_pp3_stage1_flag00011011;
    sc_signal< sc_lv<12> > small_input_address0;
    sc_signal< sc_logic > small_input_ce0;
    sc_signal< sc_logic > small_input_we0;
    sc_signal< sc_lv<12> > small_input_address1;
    sc_signal< sc_logic > small_input_ce1;
    sc_signal< sc_logic > small_input_we1;
    sc_signal< sc_lv<8> > small_input_d1;
    sc_signal< sc_lv<12> > indvar_phi_fu_303_p4;
    sc_signal< sc_lv<9> > i_reg_311;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<12> > k_phi_fu_327_p4;
    sc_signal< bool > ap_block_pp1_stage0_flag00000000;
    sc_signal< sc_lv<10> > posx_assign_phi_fu_350_p4;
    sc_signal< sc_lv<64> > tmp_fu_400_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_440_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_445_p1;
    sc_signal< sc_lv<64> > tmp_7_fu_495_p1;
    sc_signal< sc_lv<64> > tmp_i_fu_526_p1;
    sc_signal< sc_lv<64> > tmp_39_i_fu_537_p1;
    sc_signal< sc_lv<64> > tmp_35_i_fu_552_p1;
    sc_signal< sc_lv<64> > tmp_42_i_fu_563_p1;
    sc_signal< sc_lv<64> > tmp_45_i_fu_600_p1;
    sc_signal< bool > ap_block_pp3_stage2_flag00000000;
    sc_signal< sc_lv<64> > tmp_49_i_fu_610_p1;
    sc_signal< sc_lv<64> > tmp_18_i_fu_674_p1;
    sc_signal< sc_lv<64> > tmp_28_i_fu_687_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_372_p1;
    sc_signal< sc_lv<64> > input2_sum5_cast_fu_465_p1;
    sc_signal< sc_lv<64> > output4_sum7_cast_fu_836_p1;
    sc_signal< sc_lv<64> > output4_sum_cast_fu_868_p1;
    sc_signal< sc_logic > ap_reg_ioackin_INPUT_r_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_OUTPUT_r_AWREADY;
    sc_signal< bool > ap_block_pp3_stage3_flag00001001;
    sc_signal< sc_logic > ap_reg_ioackin_OUTPUT_r_WREADY;
    sc_signal< bool > ap_block_pp3_stage0_flag00001001;
    sc_signal< sc_lv<32> > position_fu_166;
    sc_signal< sc_lv<32> > position_1_fu_499_p2;
    sc_signal< sc_lv<12> > tmp_4_fu_434_p2;
    sc_signal< sc_lv<32> > tmp_3_fu_450_p2;
    sc_signal< sc_lv<33> > tmp_3_cast_fu_456_p1;
    sc_signal< sc_lv<33> > input2_sum5_fu_460_p2;
    sc_signal< sc_lv<12> > tmp_38_i_fu_531_p2;
    sc_signal< sc_lv<11> > tmp_34_i_fu_546_p2;
    sc_signal< sc_lv<10> > tmp_41_i_fu_557_p2;
    sc_signal< sc_lv<9> > tmp_37_i_fu_572_p3;
    sc_signal< sc_lv<11> > tmp_44_i_fu_595_p2;
    sc_signal< sc_lv<12> > tmp_48_i_fu_605_p2;
    sc_signal< sc_lv<9> > res_cast_fu_568_p1;
    sc_signal< sc_lv<9> > tmp_40_i_cast6_fu_584_p1;
    sc_signal< sc_lv<9> > tmp1_fu_615_p2;
    sc_signal< sc_lv<10> > tmp1_cast_fu_621_p1;
    sc_signal< sc_lv<10> > tmp_37_i_cast_fu_580_p1;
    sc_signal< sc_lv<10> > res_7_i_fu_625_p2;
    sc_signal< sc_lv<11> > res_7_i_cast_fu_631_p1;
    sc_signal< sc_lv<11> > res_2_cast_fu_591_p1;
    sc_signal< sc_lv<9> > res_2_cast5_fu_587_p1;
    sc_signal< sc_lv<9> > tmp_47_i_fu_647_p3;
    sc_signal< sc_lv<11> > tmp_47_i_cast_fu_655_p1;
    sc_signal< sc_lv<11> > res_9_i_fu_663_p2;
    sc_signal< sc_lv<12> > tmp_27_i_fu_679_p3;
    sc_signal< sc_lv<9> > tmp_20_i_fu_692_p3;
    sc_signal< sc_lv<10> > tmp2_cast_fu_704_p1;
    sc_signal< sc_lv<10> > tmp_20_i_cast_fu_700_p1;
    sc_signal< sc_lv<10> > res_2_i_fu_707_p2;
    sc_signal< sc_lv<11> > res_2_i_cast_fu_713_p1;
    sc_signal< sc_lv<1> > abscond_fu_730_p2;
    sc_signal< sc_lv<11> > neg_fu_725_p2;
    sc_signal< sc_lv<9> > tmp_30_i_fu_742_p3;
    sc_signal< sc_lv<11> > tmp_30_i_cast_fu_750_p1;
    sc_signal< sc_lv<11> > res_4_i_fu_754_p2;
    sc_signal< sc_lv<11> > tmp_40_i_cast_fu_722_p1;
    sc_signal< sc_lv<11> > abs5_fu_784_p3;
    sc_signal< sc_lv<12> > abs_cast4_fu_781_p1;
    sc_signal< sc_lv<12> > abs5_cast3_fu_789_p1;
    sc_signal< sc_lv<12> > p_fu_797_p2;
    sc_signal< sc_lv<4> > tmp_14_fu_803_p4;
    sc_signal< sc_lv<19> > tmp_13_fu_819_p3;
    sc_signal< sc_lv<33> > tmp_14_cast_fu_827_p1;
    sc_signal< sc_lv<33> > output4_sum7_fu_831_p2;
    sc_signal< sc_lv<8> > tmp_12_fu_793_p1;
    sc_signal< sc_lv<19> > tmp_16_fu_851_p3;
    sc_signal< sc_lv<33> > tmp_17_cast_fu_859_p1;
    sc_signal< sc_lv<33> > output4_sum_fu_863_p2;
    sc_signal< sc_lv<27> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp3_stage2_flag00011011;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    sc_signal< sc_logic > ap_idle_pp3;
    sc_signal< sc_logic > ap_enable_pp3;
    sc_signal< bool > ap_condition_1437;
    sc_signal< bool > ap_condition_1440;
    sc_signal< bool > ap_condition_502;
    sc_signal< bool > ap_condition_508;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<27> ap_ST_fsm_state1;
    static const sc_lv<27> ap_ST_fsm_state2;
    static const sc_lv<27> ap_ST_fsm_state3;
    static const sc_lv<27> ap_ST_fsm_state4;
    static const sc_lv<27> ap_ST_fsm_state5;
    static const sc_lv<27> ap_ST_fsm_state6;
    static const sc_lv<27> ap_ST_fsm_state7;
    static const sc_lv<27> ap_ST_fsm_state8;
    static const sc_lv<27> ap_ST_fsm_pp0_stage0;
    static const sc_lv<27> ap_ST_fsm_state12;
    static const sc_lv<27> ap_ST_fsm_state13;
    static const sc_lv<27> ap_ST_fsm_pp1_stage0;
    static const sc_lv<27> ap_ST_fsm_state16;
    static const sc_lv<27> ap_ST_fsm_state17;
    static const sc_lv<27> ap_ST_fsm_state18;
    static const sc_lv<27> ap_ST_fsm_state19;
    static const sc_lv<27> ap_ST_fsm_state20;
    static const sc_lv<27> ap_ST_fsm_state21;
    static const sc_lv<27> ap_ST_fsm_state22;
    static const sc_lv<27> ap_ST_fsm_state23;
    static const sc_lv<27> ap_ST_fsm_pp2_stage0;
    static const sc_lv<27> ap_ST_fsm_state27;
    static const sc_lv<27> ap_ST_fsm_pp3_stage0;
    static const sc_lv<27> ap_ST_fsm_pp3_stage1;
    static const sc_lv<27> ap_ST_fsm_pp3_stage2;
    static const sc_lv<27> ap_ST_fsm_pp3_stage3;
    static const sc_lv<27> ap_ST_fsm_state42;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<1> ap_const_lv1_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_INPUT_R_USER_VALUE;
    static const int C_M_AXI_INPUT_R_PROT_VALUE;
    static const int C_M_AXI_INPUT_R_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_OUTPUT_R_USER_VALUE;
    static const int C_M_AXI_OUTPUT_R_PROT_VALUE;
    static const int C_M_AXI_OUTPUT_R_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_C00;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_400;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<12> ap_const_lv12_C00;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<9> ap_const_lv9_101;
    static const sc_lv<12> ap_const_lv12_800;
    static const sc_lv<12> ap_const_lv12_400;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<12> ap_const_lv12_801;
    static const sc_lv<11> ap_const_lv11_401;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<12> ap_const_lv12_7FF;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<8> ap_const_lv8_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const7();
    void thread_ap_clk_no_reset_();
    void thread_INPUT_r_ARADDR();
    void thread_INPUT_r_ARLEN();
    void thread_INPUT_r_ARVALID();
    void thread_INPUT_r_RREADY();
    void thread_INPUT_r_blk_n_AR();
    void thread_INPUT_r_blk_n_R();
    void thread_OUTPUT_r_AWADDR();
    void thread_OUTPUT_r_AWVALID();
    void thread_OUTPUT_r_BREADY();
    void thread_OUTPUT_r_WDATA();
    void thread_OUTPUT_r_WVALID();
    void thread_OUTPUT_r_blk_n_AW();
    void thread_OUTPUT_r_blk_n_B();
    void thread_OUTPUT_r_blk_n_W();
    void thread_abs5_cast3_fu_789_p1();
    void thread_abs5_fu_784_p3();
    void thread_abs_cast4_fu_781_p1();
    void thread_abs_fu_735_p3();
    void thread_abscond4_fu_771_p2();
    void thread_abscond_fu_730_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_pp3_stage0();
    void thread_ap_CS_fsm_pp3_stage1();
    void thread_ap_CS_fsm_pp3_stage2();
    void thread_ap_CS_fsm_pp3_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0_flag00000000();
    void thread_ap_block_pp0_stage0_flag00011001();
    void thread_ap_block_pp0_stage0_flag00011011();
    void thread_ap_block_pp1_stage0_flag00000000();
    void thread_ap_block_pp1_stage0_flag00011001();
    void thread_ap_block_pp1_stage0_flag00011011();
    void thread_ap_block_pp2_stage0_flag00000000();
    void thread_ap_block_pp2_stage0_flag00011001();
    void thread_ap_block_pp2_stage0_flag00011011();
    void thread_ap_block_pp3_stage0_flag00000000();
    void thread_ap_block_pp3_stage0_flag00001001();
    void thread_ap_block_pp3_stage0_flag00011001();
    void thread_ap_block_pp3_stage0_flag00011011();
    void thread_ap_block_pp3_stage1_flag00000000();
    void thread_ap_block_pp3_stage1_flag00011001();
    void thread_ap_block_pp3_stage1_flag00011011();
    void thread_ap_block_pp3_stage2_flag00000000();
    void thread_ap_block_pp3_stage2_flag00011001();
    void thread_ap_block_pp3_stage2_flag00011011();
    void thread_ap_block_pp3_stage3_flag00000000();
    void thread_ap_block_pp3_stage3_flag00001001();
    void thread_ap_block_pp3_stage3_flag00011001();
    void thread_ap_block_pp3_stage3_flag00011011();
    void thread_ap_block_state10_pp0_stage0_iter1();
    void thread_ap_block_state11_pp0_stage0_iter2();
    void thread_ap_block_state14_pp1_stage0_iter0();
    void thread_ap_block_state15_pp1_stage0_iter1();
    void thread_ap_block_state24_pp2_stage0_iter0();
    void thread_ap_block_state25_pp2_stage0_iter1();
    void thread_ap_block_state26_pp2_stage0_iter2();
    void thread_ap_block_state28_pp3_stage0_iter0();
    void thread_ap_block_state29_pp3_stage1_iter0();
    void thread_ap_block_state30_pp3_stage2_iter0();
    void thread_ap_block_state31_pp3_stage3_iter0();
    void thread_ap_block_state32_pp3_stage0_iter1();
    void thread_ap_block_state33_pp3_stage1_iter1();
    void thread_ap_block_state34_pp3_stage2_iter1();
    void thread_ap_block_state35_io();
    void thread_ap_block_state35_pp3_stage3_iter1();
    void thread_ap_block_state36_io();
    void thread_ap_block_state36_pp3_stage0_iter2();
    void thread_ap_block_state37_pp3_stage1_iter2();
    void thread_ap_block_state38_pp3_stage2_iter2();
    void thread_ap_block_state39_pp3_stage3_iter2();
    void thread_ap_block_state40_pp3_stage0_iter3();
    void thread_ap_block_state41_pp3_stage1_iter3();
    void thread_ap_block_state9_pp0_stage0_iter0();
    void thread_ap_condition_1437();
    void thread_ap_condition_1440();
    void thread_ap_condition_502();
    void thread_ap_condition_508();
    void thread_ap_condition_pp0_exit_iter0_state9();
    void thread_ap_condition_pp1_exit_iter0_state14();
    void thread_ap_condition_pp2_exit_iter0_state24();
    void thread_ap_condition_pp3_exit_iter0_state28();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_enable_pp3();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_idle_pp3();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_INPUT_r_ARREADY();
    void thread_ap_sig_ioackin_OUTPUT_r_AWREADY();
    void thread_ap_sig_ioackin_OUTPUT_r_WREADY();
    void thread_exitcond1_fu_422_p2();
    void thread_exitcond2_fu_410_p2();
    void thread_exitcond3_fu_475_p2();
    void thread_exitcond6_fu_388_p2();
    void thread_exitcond_fu_510_p2();
    void thread_i_1_fu_878_p2();
    void thread_icmp_fu_813_p2();
    void thread_indvar_next1_fu_481_p2();
    void thread_indvar_next_fu_394_p2();
    void thread_indvar_phi_fu_303_p4();
    void thread_input2_sum5_cast_fu_465_p1();
    void thread_input2_sum5_fu_460_p2();
    void thread_j_fu_520_p2();
    void thread_k_1_fu_428_p2();
    void thread_k_phi_fu_327_p4();
    void thread_neg3_fu_765_p2();
    void thread_neg_fu_725_p2();
    void thread_output4_sum7_cast_fu_836_p1();
    void thread_output4_sum7_fu_831_p2();
    void thread_output4_sum_cast_fu_868_p1();
    void thread_output4_sum_fu_863_p2();
    void thread_p_fu_797_p2();
    void thread_position_1_fu_499_p2();
    void thread_posx_assign_cast8_fu_516_p1();
    void thread_posx_assign_cast_fu_542_p1();
    void thread_posx_assign_phi_fu_350_p4();
    void thread_res_1_fu_759_p2();
    void thread_res_2_cast5_fu_587_p1();
    void thread_res_2_cast_fu_591_p1();
    void thread_res_2_i_cast_fu_713_p1();
    void thread_res_2_i_fu_707_p2();
    void thread_res_3_i_fu_717_p2();
    void thread_res_4_i_fu_754_p2();
    void thread_res_7_i_cast_fu_631_p1();
    void thread_res_7_i_fu_625_p2();
    void thread_res_8_i_fu_635_p2();
    void thread_res_9_i_fu_663_p2();
    void thread_res_cast_fu_568_p1();
    void thread_res_fu_668_p2();
    void thread_small_input_address0();
    void thread_small_input_address1();
    void thread_small_input_ce0();
    void thread_small_input_ce1();
    void thread_small_input_d1();
    void thread_small_input_we0();
    void thread_small_input_we1();
    void thread_tmp1_cast_fu_621_p1();
    void thread_tmp1_fu_615_p2();
    void thread_tmp2_cast_fu_704_p1();
    void thread_tmp2_fu_641_p2();
    void thread_tmp_11_fu_777_p1();
    void thread_tmp_12_fu_793_p1();
    void thread_tmp_13_fu_819_p3();
    void thread_tmp_14_cast_fu_827_p1();
    void thread_tmp_14_fu_803_p4();
    void thread_tmp_15_fu_846_p2();
    void thread_tmp_16_fu_851_p3();
    void thread_tmp_17_cast_fu_859_p1();
    void thread_tmp_18_i_fu_674_p1();
    void thread_tmp_1_fu_416_p2();
    void thread_tmp_20_cast_fu_382_p1();
    void thread_tmp_20_i_cast_fu_700_p1();
    void thread_tmp_20_i_fu_692_p3();
    void thread_tmp_21_cast_fu_385_p1();
    void thread_tmp_27_i_fu_679_p3();
    void thread_tmp_28_i_fu_687_p1();
    void thread_tmp_2_fu_372_p1();
    void thread_tmp_30_i_cast_fu_750_p1();
    void thread_tmp_30_i_fu_742_p3();
    void thread_tmp_34_i_fu_546_p2();
    void thread_tmp_35_i_fu_552_p1();
    void thread_tmp_37_i_cast_fu_580_p1();
    void thread_tmp_37_i_fu_572_p3();
    void thread_tmp_38_i_fu_531_p2();
    void thread_tmp_39_i_fu_537_p1();
    void thread_tmp_3_cast_fu_456_p1();
    void thread_tmp_3_fu_450_p2();
    void thread_tmp_40_i_cast6_fu_584_p1();
    void thread_tmp_40_i_cast_fu_722_p1();
    void thread_tmp_41_i_fu_557_p2();
    void thread_tmp_42_i_fu_563_p1();
    void thread_tmp_44_i_fu_595_p2();
    void thread_tmp_45_i_fu_600_p1();
    void thread_tmp_47_i_cast_fu_655_p1();
    void thread_tmp_47_i_fu_647_p3();
    void thread_tmp_48_i_fu_605_p2();
    void thread_tmp_49_i_fu_610_p1();
    void thread_tmp_4_fu_434_p2();
    void thread_tmp_50_i_cast_fu_659_p1();
    void thread_tmp_5_fu_440_p1();
    void thread_tmp_6_fu_445_p1();
    void thread_tmp_7_fu_495_p1();
    void thread_tmp_9_fu_487_p3();
    void thread_tmp_fu_400_p1();
    void thread_tmp_i_fu_526_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
